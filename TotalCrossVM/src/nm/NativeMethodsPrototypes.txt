
TC_API void tmGM_showAddress_sb(NMParams p);
TC_API void tucL_create(NMParams p);
TC_API void tucL_destroy(NMParams p);
TC_API void tuzZL_deflate_ssiib(NMParams p);
TC_API void tuzZL_inflate_ssib(NMParams p);
TC_API void tuzZE_setTime_l(NMParams p);
TC_API void tuzZE_getTime(NMParams p);
TC_API void tuzZF_createZipFile_f(NMParams p);
TC_API void tuzZF_close(NMParams p);
TC_API void tuzZF_entries(NMParams p);
TC_API void tuzZF_getEntry_s(NMParams p);
TC_API void tuzZF_getEntryStream_s(NMParams p);
TC_API void tumS_beep(NMParams p);
TC_API void tumS_tone_ii(NMParams p);
TC_API void tumS_setEnabled_b(NMParams p);
TC_API void tumMC_create(NMParams p);
TC_API void tumMC_nativeStart(NMParams p);
TC_API void tumMC_stop(NMParams p);
TC_API void tumMC_reset(NMParams p);
TC_API void tumMC_nativeClose(NMParams p);
TC_API void tumMC_record_iib(NMParams p);
TC_API void tumC_nativeClick(NMParams p);
TC_API void tumC_initCamera(NMParams p);
TC_API void tumC_nativeFinalize(NMParams p);
TC_API void tumC_getNativeResolutions(NMParams p);
TC_API void tuiI_imageLoad_s(NMParams p);
TC_API void tuiI_imageParse_sB(NMParams p);
TC_API void tuiI_changeColors_ii(NMParams p);
TC_API void tuiI_getPixelRow_Bi(NMParams p);
TC_API void tuiI_getModifiedInstance_iiiiiii(NMParams p);
TC_API void tuiI_setCurrentFrame_i(NMParams p);
TC_API void tuiI_applyColor_i(NMParams p);
TC_API void tuiI_nativeEquals_i(NMParams p);
TC_API void tuiI_applyColor2_i(NMParams p);
TC_API void tuiI_setTransparentColor_i(NMParams p);
TC_API void tuiI_applyChanges(NMParams p);
TC_API void tuiI_freeTexture(NMParams p);
TC_API void tugG_fillShadedRect_iiiibbiii(NMParams p);
TC_API void tugG_dither_iiii(NMParams p);
TC_API void tuiI_createJpg_si(NMParams p);
TC_API void tugG_drawCylindricShade_iiiiii(NMParams p);
TC_API void tugG_drawWindowBorder_iiiiiiiiii(NMParams p);
TC_API void tugG_create_g(NMParams p);
TC_API void tugG_drawEllipse_iiii(NMParams p);
TC_API void tugG_fillEllipse_iiii(NMParams p);
TC_API void tugG_drawArc_iiidd(NMParams p);
TC_API void tugG_drawPie_iiidd(NMParams p);
TC_API void tugG_fillPie_iiidd(NMParams p);
TC_API void tugG_drawEllipticalArc_iiiidd(NMParams p);
TC_API void tugG_drawEllipticalPie_iiiidd(NMParams p);
TC_API void tugG_fillEllipticalPie_iiiidd(NMParams p);
TC_API void tugG_drawCircle_iii(NMParams p);
TC_API void tugG_fillCircle_iii(NMParams p);
TC_API void tugG_getPixel_ii(NMParams p);
TC_API void tugG_setPixel_ii(NMParams p);
TC_API void tugG_drawLine_iiii(NMParams p);
TC_API void tugG_drawDots_iiii(NMParams p);
TC_API void tugG_drawRect_iiii(NMParams p);
TC_API void tugG_fillRect_iiii(NMParams p);
TC_API void tugG_fillPolygon_IIi(NMParams p);
TC_API void tugG_drawDottedRect_iiii(NMParams p);
TC_API void tugG_drawPolygon_IIi(NMParams p);
TC_API void tugG_drawPolyline_IIi(NMParams p);
TC_API void tugG_drawText_sii(NMParams p);
TC_API void tugG_drawText_Ciiii(NMParams p);
TC_API void tugG_drawText_siii(NMParams p);
TC_API void tugG_drawHatchedRect_iiiibb(NMParams p);
TC_API void tugG_fillHatchedRect_iiiibb(NMParams p);
TC_API void tugG_drawRoundRect_iiiii(NMParams p);
TC_API void tugG_fillRoundRect_iiiii(NMParams p);
TC_API void tugG_setClip_iiii(NMParams p);
TC_API void tugG_clip_r(NMParams p);
TC_API void tugG_copyRect_giiiiii(NMParams p);
TC_API void tugG_drawRoundGradient_iiiiiiiii(NMParams p);
TC_API void tugG_drawImage_iiib(NMParams p);
TC_API void tugG_copyImageRect_iiiiib(NMParams p);
TC_API void tugG_setPixels_IIi(NMParams p);
TC_API void tugG_refresh_iiiiiif(NMParams p);
TC_API void tugG_drawVistaRect_iiiiiiii(NMParams p);
TC_API void tugG_draw3dRect_iiiibbbI(NMParams p);
TC_API void tugG_fillVistaRect_iiiiibb(NMParams p);
TC_API void tugG_drawArrow_iiibbi(NMParams p);
TC_API void tugG_drawImage_iii(NMParams p);
TC_API void tugG_fillEllipseGradient_iiii(NMParams p);
TC_API void tugG_fillPieGradient_iiidd(NMParams p);
TC_API void tugG_fillEllipticalPieGradient_i(NMParams p);
TC_API void tugG_fillCircleGradient_iii(NMParams p);
TC_API void tugG_fillPolygonGradient_IIi(NMParams p);
TC_API void tugG_getRGB_Iiiiii(NMParams p);
TC_API void tugG_setRGB_Iiiiii(NMParams p);
TC_API void tugG_fadeScreen_i(NMParams p);
TC_API void tugG_drawText_Ciiiibi(NMParams p);
TC_API void tugG_drawText_siiiibi(NMParams p);
TC_API void tugG_drawText_siiiiibi(NMParams p);
TC_API void tugG_drawText_siibi(NMParams p);
TC_API void tugG_drawText_siiibi(NMParams p);
TC_API void tufF_fontCreate(NMParams p);
TC_API void tufFM_fontMetricsCreate(NMParams p);
TC_API void tufFM_charWidth_c(NMParams p);
TC_API void tufFM_stringWidth_s(NMParams p);
TC_API void tufFM_stringWidth_Cii(NMParams p);
TC_API void tufFM_sbWidth_s(NMParams p);
TC_API void tufFM_sbWidth_sii(NMParams p);
TC_API void tufFM_charWidth_si(NMParams p);
TC_API void tueE_isAvailable(NMParams p);
TC_API void tuC_updateScreen(NMParams p);
TC_API void tuMW_exit_i(NMParams p);
TC_API void tuMW_setTimerInterval_i(NMParams p);
TC_API void tuMW_minimize(NMParams p);
TC_API void tuMW_restore(NMParams p);
TC_API void tuMW_getCommandLine(NMParams p);
TC_API void tuW_pumpEvents(NMParams p);
TC_API void tuW_setSIP_icb(NMParams p);
TC_API void tuW_setDeviceTitle_s(NMParams p);
TC_API void tsCC_bytes2chars_Bii(NMParams p);
TC_API void tsCC_chars2bytes_Cii(NMParams p);
TC_API void tsUTF8CC_bytes2chars_Bii(NMParams p);
TC_API void tsUTF8CC_chars2bytes_Cii(NMParams p);
TC_API void tsC_toInt_s(NMParams p);
TC_API void tsC_toString_c(NMParams p);
TC_API void tsC_doubleToIntBits_d(NMParams p);
TC_API void tsC_intBitsToDouble_i(NMParams p);
TC_API void tsC_toString_i(NMParams p);
TC_API void tsC_toString_di(NMParams p);
TC_API void tsC_toDouble_s(NMParams p);
TC_API void tsC_toString_si(NMParams p);
TC_API void tsC_doubleToLongBits_d(NMParams p);
TC_API void tsC_longBitsToDouble_l(NMParams p);
TC_API void tsC_toLowerCase_c(NMParams p);
TC_API void tsC_toUpperCase_c(NMParams p);
TC_API void tsC_unsigned2hex_ii(NMParams p);
TC_API void tsC_hashCode_s(NMParams p);
TC_API void tsC_getBreakPos_fsiib(NMParams p);
TC_API void tsC_insertAt_sic(NMParams p);
TC_API void tsC_append_sci(NMParams p);
TC_API void tsC_toString_l(NMParams p);
TC_API void tsC_toLong_s(NMParams p);
TC_API void tsC_fill_Ciic(NMParams p);
TC_API void tsC_fill_Biib(NMParams p);
TC_API void tsC_fill_Iiii(NMParams p);
TC_API void tsC_fill_Diid(NMParams p);
TC_API void tsC_fill_Siii(NMParams p);
TC_API void tsC_fill_Biii(NMParams p);
TC_API void tsC_fill_Liil(NMParams p);
TC_API void tsC_fill_Oiio(NMParams p);
TC_API void tsC_replace_sss(NMParams p);
TC_API void tsC_getBytes_s(NMParams p);
TC_API void tsC_numberOf_sc(NMParams p);
TC_API void tsC_zeroPad_si(NMParams p);
TC_API void tsC_zeroPad_ii(NMParams p);
TC_API void tsC_dup_ci(NMParams p);
TC_API void tsC_spacePad_sib(NMParams p);
TC_API void tsC_numberPad_si(NMParams p);
TC_API void tsC_numberPad_ii(NMParams p);
TC_API void tsT_update(NMParams p);
TC_API void tsS_refresh(NMParams p);
TC_API void tsV_arrayCopy_oioii(NMParams p);
TC_API void tsV_preallocateArray_oi(NMParams p);
TC_API void tsV_getTimeStamp(NMParams p);
TC_API void tsV_setTime_t(NMParams p);
TC_API void tsV_exitAndReboot(NMParams p);
TC_API void tsV_exec_ssib(NMParams p);
TC_API void tsV_setAutoOff_b(NMParams p);
TC_API void tsV_sleep_i(NMParams p);
TC_API void tsV_getFreeMemory(NMParams p);
TC_API void tsV_gc(NMParams p);
TC_API void tsV_interceptSpecialKeys_I(NMParams p);
TC_API void tsV_debug_s(NMParams p);
TC_API void tsV_alert_s(NMParams p);
TC_API void tsV_clipboardCopy_s(NMParams p);
TC_API void tsV_clipboardPaste(NMParams p);
TC_API void tsV_attachLibrary_s(NMParams p);
TC_API void tsV_privateAttachNativeLibrary_s(NMParams p);
TC_API void tsV_isKeyDown_i(NMParams p);
TC_API void tsV_getFile_s(NMParams p);
TC_API void tsV_getRemainingBattery(NMParams p);
TC_API void tsV_tweak_ib(NMParams p);
TC_API void tsV_getStackTrace_t(NMParams p);
TC_API void tsV_showKeyCodes_b(NMParams p);
TC_API void tsV_turnScreenOn_b(NMParams p);
TC_API void tsV_vibrate_i(NMParams p);
TC_API void tsR_getInt_iss(NMParams p);
TC_API void tsR_getString_iss(NMParams p);
TC_API void tsR_getBlob_iss(NMParams p);
TC_API void tsR_set_issi(NMParams p);
TC_API void tsR_set_isss(NMParams p);
TC_API void tsR_set_issB(NMParams p);
TC_API void tsR_delete_iss(NMParams p);
TC_API void tsR_list_is(NMParams p);
TC_API void tpcbIPOIC_NewContact(NMParams p);
TC_API void tpcbIPOIC_GetAllContacts(NMParams p);
TC_API void tpcbIPOIC_ViewAllContacts(NMParams p);
TC_API void tpcbIPOIC_getIContactString_s(NMParams p);
TC_API void tpcbIPOIC_removeIContact_s(NMParams p);
TC_API void tpcbIPOIC_editIContact_sssssssss(NMParams p);
TC_API void tpcbIPOIC_newAppointment(NMParams p);
TC_API void tpcbIPOIC_GetAllAppointments(NMParams p);
TC_API void tpcbIPOIC_ViewAllAppointments(NMParams p);
TC_API void tpcbIPOIC_getIAppointmentString_(NMParams p);
TC_API void tpcbIPOIC_removeIAppointment_s(NMParams p);
TC_API void tpcbIPOIC_editIAppointment_sssss(NMParams p);
TC_API void tpcbIPOIC_ViewAllTasks(NMParams p);
TC_API void tpcbIPOIC_GetAllTasks(NMParams p);
TC_API void tpcbIPOIC_newTask(NMParams p);
TC_API void tpcbIPOIC_getITaskString_s(NMParams p);
TC_API void tpcbIPOIC_removeITask_s(NMParams p);
TC_API void tpcbIPOIC_editITask_ssssssssssss(NMParams p);
TC_API void tnsSSL_dispose(NMParams p);
TC_API void tnsSSL_handshakeStatus(NMParams p);
TC_API void tnsSSL_getCipherId(NMParams p);
TC_API void tnsSSL_getSessionId(NMParams p);
TC_API void tnsSSL_getCertificateDN_i(NMParams p);
TC_API void tnsSSL_read_s(NMParams p);
TC_API void tnsSSL_write_Bi(NMParams p);
TC_API void tnsSSL_verifyCertificate(NMParams p);
TC_API void tnsSSL_renegotiate(NMParams p);
TC_API void tnsSSLCTX_create_ii(NMParams p);
TC_API void tnsSSLCTX_dispose(NMParams p);
TC_API void tnsSSLCTX_find_s(NMParams p);
TC_API void tnsSSLCTX_objLoad_iss(NMParams p);
TC_API void tnsSSLCTX_objLoad_iBis(NMParams p);
TC_API void tnsSSLCTX_newClient_sB(NMParams p);
TC_API void tnsSSLCTX_newServer_s(NMParams p);
TC_API void tnsSSLU_getConfig_i(NMParams p);
TC_API void tnsSSLU_displayError_i(NMParams p);
TC_API void tnsSSLU_version(NMParams p);
TC_API void tnCM_loadResources(NMParams p);
TC_API void tnCM_setDefaultConfiguration_is(NMParams p);
TC_API void tnCM_open(NMParams p);
TC_API void tnCM_open_i(NMParams p);
TC_API void tnCM_nativeClose(NMParams p);
TC_API void tnCM_getHostAddress_s(NMParams p);
TC_API void tnCM_getHostName_s(NMParams p);
TC_API void tnCM_getLocalHost(NMParams p);
TC_API void tnCM_isAvailable_i(NMParams p);
TC_API void tnCM_releaseResources(NMParams p);
TC_API void tnS_socketCreate_siib(NMParams p);
TC_API void tnS_nativeClose(NMParams p);
TC_API void tnS_readWriteBytes_Biib(NMParams p);
TC_API void tnSS_serversocketCreate_iiis(NMParams p);
TC_API void tnSS_nativeClose(NMParams p);
TC_API void tpCI_loadResources(NMParams p);
TC_API void tpCI_releaseResources(NMParams p);
TC_API void tpCI_update(NMParams p);
TC_API void tpD_number_s(NMParams p);
TC_API void tpD_hangup(NMParams p);
TC_API void tpSMS_send_ss(NMParams p);
TC_API void tpSMS_receive(NMParams p);
TC_API void jlC_forName_s(NMParams p);
TC_API void jlC_newInstance(NMParams p);
TC_API void jlC_isInstance_o(NMParams p);
TC_API void jlO_toStringNative(NMParams p);
TC_API void jlO_nativeHashCode(NMParams p);
TC_API void jlO_getClass(NMParams p);
TC_API void jlS_toUpperCase(NMParams p);
TC_API void jlS_toLowerCase(NMParams p);
TC_API void jlS_valueOf_d(NMParams p);
TC_API void jlS_valueOf_c(NMParams p);
TC_API void jlS_valueOf_i(NMParams p);
TC_API void jlS_indexOf_i(NMParams p);
TC_API void jlS_indexOf_ii(NMParams p);
TC_API void jlS_equals_o(NMParams p);
TC_API void jlS_compareTo_s(NMParams p);
TC_API void jlS_copyChars_CiCii(NMParams p);
TC_API void jlS_indexOf_si(NMParams p);
TC_API void jlS_indexOf_s(NMParams p);
TC_API void jlS_hashCode(NMParams p);
TC_API void jlS_startsWith_si(NMParams p);
TC_API void jlS_startsWith_s(NMParams p);
TC_API void jlS_endsWith_s(NMParams p);
TC_API void jlS_equalsIgnoreCase_s(NMParams p);
TC_API void jlS_replace_cc(NMParams p);
TC_API void jlS_lastIndexOf_ii(NMParams p);
TC_API void jlS_lastIndexOf_i(NMParams p);
TC_API void jlS_trim(NMParams p);
TC_API void jlS_valueOf_l(NMParams p);
TC_API void jlS_lastIndexOf_s(NMParams p);
TC_API void jlS_lastIndexOf_si(NMParams p);
TC_API void jlS_getBytes(NMParams p);
TC_API void jlSB_ensureCapacity_i(NMParams p);
TC_API void jlSB_setLength_i(NMParams p);
TC_API void jlSB_append_s(NMParams p);
TC_API void jlSB_append_C(NMParams p);
TC_API void jlSB_append_Cii(NMParams p);
TC_API void jlSB_append_c(NMParams p);
TC_API void jlSB_append_i(NMParams p);
TC_API void jlSB_append_l(NMParams p);
TC_API void jlSB_append_d(NMParams p);
TC_API void jlSB_delete_ii(NMParams p);
TC_API void jlT_printStackTraceNative(NMParams p);
TC_API void jlT_yield(NMParams p);
TC_API void jlT_start(NMParams p);
TC_API void jlT_currentThread(NMParams p);
TC_API void tidRD_isSupported_i(NMParams p);
TC_API void tidRD_getState_i(NMParams p);
TC_API void tidRD_setState_ii(NMParams p);
TC_API void tidPC_create_iiiii(NMParams p);
TC_API void tidPC_nativeClose(NMParams p);
TC_API void tidPC_setFlowControl_b(NMParams p);
TC_API void tidPC_readCheck(NMParams p);
TC_API void tidbDA_nativeDiscoveryAgent(NMParams p);
TC_API void tidbDA_cancelInquiry_d(NMParams p);
TC_API void tidbDA_cancelServiceSearch_i(NMParams p);
TC_API void tidbDA_retrieveDevices_i(NMParams p);
TC_API void tidbDA_nativeSearchServices_IUrd(NMParams p);
TC_API void tidbDA_selectService_uib(NMParams p);
TC_API void tidbDA_startInquiry_id(NMParams p);
TC_API void tidbSPS_createSerialPortServer_s(NMParams p);
TC_API void tidbSPS_accept(NMParams p);
TC_API void tidbSPS_close(NMParams p);
TC_API void tidbSPC_createSerialPortClient_s(NMParams p);
TC_API void tidbSPC_readBytes_Bii(NMParams p);
TC_API void tidbSPC_writeBytes_Bii(NMParams p);
TC_API void tidbSPC_close(NMParams p);
TC_API void tidgGPS_startGPS(NMParams p);
TC_API void tidgGPS_updateLocation(NMParams p);
TC_API void tidgGPS_stopGPS(NMParams p);
TC_API void tiPDBF_create_sssi(NMParams p);
TC_API void tiPDBF_rename_s(NMParams p);
TC_API void tiPDBF_addRecord_i(NMParams p);
TC_API void tiPDBF_addRecord_ii(NMParams p);
TC_API void tiPDBF_resizeRecord_i(NMParams p);
TC_API void tiPDBF_nativeClose(NMParams p);
TC_API void tiPDBF_delete(NMParams p);
TC_API void tiPDBF_listPDBs_ii(NMParams p);
TC_API void tiPDBF_deleteRecord(NMParams p);
TC_API void tiPDBF_getRecordCount(NMParams p);
TC_API void tiPDBF_setRecordPos_i(NMParams p);
TC_API void tiPDBF_readWriteBytes_Biib(NMParams p);
TC_API void tiPDBF_inspectRecord_Bii(NMParams p);
TC_API void tiPDBF_getRecordAttributes_i(NMParams p);
TC_API void tiPDBF_setRecordAttributes_ib(NMParams p);
TC_API void tiPDBF_getAttributes(NMParams p);
TC_API void tiPDBF_setAttributes_i(NMParams p);
TC_API void tiPDBF_searchBytes_Bii(NMParams p);
TC_API void tiF_getDeviceAlias(NMParams p);
TC_API void tiF_create_sii(NMParams p);
TC_API void tiF_nativeClose(NMParams p);
TC_API void tiF_isCardInserted_i(NMParams p);
TC_API void tiF_createDir(NMParams p);
TC_API void tiF_delete(NMParams p);
TC_API void tiF_exists(NMParams p);
TC_API void tiF_getSize(NMParams p);
TC_API void tiF_isDir(NMParams p);
TC_API void tiF_listFiles(NMParams p);
TC_API void tiF_readBytes_Bii(NMParams p);
TC_API void tiF_rename_s(NMParams p);
TC_API void tiF_setPos_i(NMParams p);
TC_API void tiF_writeBytes_Bii(NMParams p);
TC_API void tiF_setAttributes_i(NMParams p);
TC_API void tiF_getAttributes(NMParams p);
TC_API void tiF_setTime_bt(NMParams p);
TC_API void tiF_getTime_b(NMParams p);
TC_API void tiF_setSize_i(NMParams p);
TC_API void tiF_getCardSerialNumber_i(NMParams p);
TC_API void tiF_flush(NMParams p);
TC_API void tiF_listRoots(NMParams p);
TC_API void tiF_isEmpty(NMParams p);
TC_API void tiF_chmod_i(NMParams p);
TC_API void tuzCS_createInflate_s(NMParams p);
TC_API void tuzCS_createDeflate_si(NMParams p);
TC_API void tuzCS_readBytes_Bii(NMParams p);
TC_API void tuzCS_writeBytes_Bii(NMParams p);
TC_API void tuzCS_close(NMParams p);
TC_API void tuzZS_createInflate_s(NMParams p);
TC_API void tuzZS_createDeflate_si(NMParams p);
TC_API void tuzZS_available(NMParams p);
TC_API void tuzZS_getNextEntry(NMParams p);
TC_API void tuzZS_putNextEntry_z(NMParams p);
TC_API void tuzZS_closeEntry(NMParams p);
TC_API void tuzZS_readBytes_Bii(NMParams p);
TC_API void tuzZS_writeBytes_Bii(NMParams p);
TC_API void tuzZS_close(NMParams p);
TC_API void txXT_resolveCharacterReference_B(NMParams p);
TC_API void txXT_setCdataContents_Bii(NMParams p);
TC_API void txXT_tokenizeBytes_B(NMParams p);
TC_API void txXT_endTokenize_B(NMParams p);
TC_API void txXT_nativeCreate(NMParams p);
TC_API void tcdMD5D_nativeCreate(NMParams p);
TC_API void tcdMD5D_process_B(NMParams p);
TC_API void tcdSHA1D_nativeCreate(NMParams p);
TC_API void tcdSHA1D_process_B(NMParams p);
TC_API void tcdSHA256D_nativeCreate(NMParams p);
TC_API void tcdSHA256D_process_B(NMParams p);
TC_API void tccAESC_nativeCreate(NMParams p);
TC_API void tccAESC_doReset(NMParams p);
TC_API void tccAESC_process_B(NMParams p);
TC_API void tccRSAC_nativeCreate(NMParams p);
TC_API void tccRSAC_finalize(NMParams p);
TC_API void tccRSAC_doReset(NMParams p);
TC_API void tccRSAC_process_B(NMParams p);
TC_API void tcsPKCS1S_nativeCreate(NMParams p);
TC_API void tcsPKCS1S_finalize(NMParams p);
TC_API void tcsPKCS1S_doReset(NMParams p);
TC_API void tcsPKCS1S_doSign_B(NMParams p);
TC_API void tcsPKCS1S_doVerify_BB(NMParams p);
TC_API void rU_getConfigInfo(NMParams p);
TC_API void rU_getProductInfo(NMParams p);
TC_API void rU_getDeviceInfo(NMParams p);
TC_API void tuBI_add_1_IIii(NMParams p);
TC_API void tuBI_add_n_IIIi(NMParams p);
TC_API void tuBI_sub_n_IIIi(NMParams p);
TC_API void tuBI_mul_1_IIii(NMParams p);
TC_API void tuBI_mul_IIiIi(NMParams p);
TC_API void tuBI_udiv_qrnnd_li(NMParams p);
TC_API void tuBI_divmod_1_IIii(NMParams p);
TC_API void tuBI_submul_1_IiIii(NMParams p);
TC_API void tuBI_divide_IiIi(NMParams p);
TC_API void tuBI_chars_per_word_i(NMParams p);
TC_API void tuBI_count_leading_zeros_i(NMParams p);
TC_API void tuBI_set_str_IBii(NMParams p);
TC_API void tuBI_cmp_IIi(NMParams p);
TC_API void tuBI_cmp_IiIi(NMParams p);
TC_API void tuBI_rshift_IIiii(NMParams p);
TC_API void tuBI_rshift0_IIiii(NMParams p);
TC_API void tuBI_rshift_long_Iii(NMParams p);
TC_API void tuBI_lshift_IiIii(NMParams p);
TC_API void tuBI_findLowestBit_i(NMParams p);
TC_API void tuBI_findLowestBit_I(NMParams p);
TC_API void tuBI_gcd_IIi(NMParams p);
TC_API void tuBI_intLength_i(NMParams p);
TC_API void tuBI_intLength_Ii(NMParams p);

//////////////////////////////////////////////////////////////////////////
TC_API void tmGM_showAddress_sb(NMParams p) // totalcross/map/GoogleMaps native static boolean showAddress(String address, boolean showSatellitePhotos);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tucL_create(NMParams p) // totalcross/util/concurrent/Lock native void create();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tucL_destroy(NMParams p) // totalcross/util/concurrent/Lock native void destroy();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZL_deflate_ssiib(NMParams p) // totalcross/util/zip/ZLib native public static int deflate(totalcross.io.Stream in, totalcross.io.Stream out, int compressionLevel, int strategy, boolean noWrap) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZL_inflate_ssib(NMParams p) // totalcross/util/zip/ZLib native public static int inflate(totalcross.io.Stream in, totalcross.io.Stream out, int sizeIn, boolean noWrap) throws IOException, ZipException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZE_setTime_l(NMParams p) // totalcross/util/zip/ZipEntry native public void setTime(long time);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZE_getTime(NMParams p) // totalcross/util/zip/ZipEntry native public long getTime();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZF_createZipFile_f(NMParams p) // totalcross/util/zip/ZipFile native private totalcross.util.zip.ZipFile createZipFile(totalcross.io.File file) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZF_close(NMParams p) // totalcross/util/zip/ZipFile native public void close() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZF_entries(NMParams p) // totalcross/util/zip/ZipFile native public String[] entries();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZF_getEntry_s(NMParams p) // totalcross/util/zip/ZipFile native public String getEntry(String name);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZF_getEntryStream_s(NMParams p) // totalcross/util/zip/ZipFile native public totalcross.io.Stream getEntryStream(String name) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumS_beep(NMParams p) // totalcross/ui/media/Sound native public static void beep();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumS_tone_ii(NMParams p) // totalcross/ui/media/Sound native public static void tone(int freq, int duration);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumS_setEnabled_b(NMParams p) // totalcross/ui/media/Sound native public static void setEnabled(boolean on);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumMC_create(NMParams p) // totalcross/ui/media/MediaClip native private void create();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumMC_nativeStart(NMParams p) // totalcross/ui/media/MediaClip native private void nativeStart();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumMC_stop(NMParams p) // totalcross/ui/media/MediaClip native public void stop();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumMC_reset(NMParams p) // totalcross/ui/media/MediaClip native public void reset();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumMC_nativeClose(NMParams p) // totalcross/ui/media/MediaClip native private void nativeClose();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumMC_record_iib(NMParams p) // totalcross/ui/media/MediaClip native public void record(int samplesPerSecond, int bitsPerSample, boolean stereo);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumC_nativeClick(NMParams p) // totalcross/ui/media/Camera native private String nativeClick();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumC_initCamera(NMParams p) // totalcross/ui/media/Camera native private void initCamera();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumC_nativeFinalize(NMParams p) // totalcross/ui/media/Camera native private void nativeFinalize();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tumC_getNativeResolutions(NMParams p) // totalcross/ui/media/Camera static native private String getNativeResolutions();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_imageLoad_s(NMParams p) // totalcross/ui/image/Image native private void imageLoad(String path);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_imageParse_sB(NMParams p) // totalcross/ui/image/Image native private void imageParse(totalcross.io.Stream in, byte []buf);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_changeColors_ii(NMParams p) // totalcross/ui/image/Image native public void changeColors(int from, int to);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_getPixelRow_Bi(NMParams p) // totalcross/ui/image/Image native protected void getPixelRow(byte []fillIn, int y);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_getModifiedInstance_iiiiiii(NMParams p) // totalcross/ui/image/Image native private void getModifiedInstance(totalcross.ui.image.Image newImg, int angle, int percScale, int color, int brightness, int contrast, int type);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_setCurrentFrame_i(NMParams p) // totalcross/ui/image/Image native public void setCurrentFrame(int nr);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_applyColor_i(NMParams p) // totalcross/ui/image/Image native public void applyColor(int color);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_nativeEquals_i(NMParams p) // totalcross/ui/image/Image native private boolean nativeEquals(totalcross.ui.image.Image other);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_applyColor2_i(NMParams p) // totalcross/ui/image/Image native public void applyColor2(int color);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_setTransparentColor_i(NMParams p) // totalcross/ui/image/Image native public totalcross.ui.image.Image setTransparentColor(int color);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_applyChanges(NMParams p) // totalcross/ui/image/Image native public void applyChanges();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_freeTexture(NMParams p) // totalcross/ui/image/Image native private void freeTexture();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillShadedRect_iiiibbiii(NMParams p) // totalcross/ui/gfx/Graphics native public void fillShadedRect(int x, int y, int width, int height, boolean invert, boolean rotate, int c1, int c2, int factor);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_dither_iiii(NMParams p) // totalcross/ui/gfx/Graphics native public void dither(int x, int y, int w, int h);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuiI_createJpg_si(NMParams p) // totalcross/ui/image/Image native public void createJpg(totalcross.io.Stream s, int quality);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawCylindricShade_iiiiii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawCylindricShade(int startColor, int endColor, int startX, int startY, int endX, int endY);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawWindowBorder_iiiiiiiiii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawWindowBorder(int xx, int yy, int ww, int hh, int titleH, int footerH, int borderColor, int titleColor, int bodyColor, int footerColor, int thickness, boolean drawSeparators);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_create_g(NMParams p) // totalcross/ui/gfx/Graphics native protected void create(totalcross.ui.gfx.GfxSurface surface);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawEllipse_iiii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawEllipse(int xc, int yc, int rx, int ry);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillEllipse_iiii(NMParams p) // totalcross/ui/gfx/Graphics native public void fillEllipse(int xc, int yc, int rx, int ry);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawArc_iiidd(NMParams p) // totalcross/ui/gfx/Graphics native public void drawArc(int xc, int yc, int r, double startAngle, double endAngle);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawPie_iiidd(NMParams p) // totalcross/ui/gfx/Graphics native public void drawPie(int xc, int yc, int r, double startAngle, double endAngle);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillPie_iiidd(NMParams p) // totalcross/ui/gfx/Graphics native public void fillPie(int xc, int yc, int r, double startAngle, double endAngle);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawEllipticalArc_iiiidd(NMParams p) // totalcross/ui/gfx/Graphics native public void drawEllipticalArc(int xc, int yc, int rx, int ry, double startAngle, double endAngle);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawEllipticalPie_iiiidd(NMParams p) // totalcross/ui/gfx/Graphics native public void drawEllipticalPie(int xc, int yc, int rx, int ry, double startAngle, double endAngle);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillEllipticalPie_iiiidd(NMParams p) // totalcross/ui/gfx/Graphics native public void fillEllipticalPie(int xc, int yc, int rx, int ry, double startAngle, double endAngle);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawCircle_iii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawCircle(int xc, int yc, int r);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillCircle_iii(NMParams p) // totalcross/ui/gfx/Graphics native public void fillCircle(int xc, int yc, int r);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_getPixel_ii(NMParams p) // totalcross/ui/gfx/Graphics native public int getPixel(int x, int y);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_setPixel_ii(NMParams p) // totalcross/ui/gfx/Graphics native public void setPixel(int x, int y);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawLine_iiii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawLine(int ax, int ay, int bx, int by);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawDots_iiii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawDots(int ax, int ay, int bx, int by);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawRect_iiii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawRect(int x, int y, int w, int h);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillRect_iiii(NMParams p) // totalcross/ui/gfx/Graphics native public void fillRect(int x, int y, int w, int h);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillPolygon_IIi(NMParams p) // totalcross/ui/gfx/Graphics native public void fillPolygon(int []xPoints, int []yPoints, int nPoints);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawDottedRect_iiii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawDottedRect(int x, int y, int w, int h);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawPolygon_IIi(NMParams p) // totalcross/ui/gfx/Graphics native public void drawPolygon(int []xPoints, int []yPoints, int nPoints);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawPolyline_IIi(NMParams p) // totalcross/ui/gfx/Graphics native public void drawPolyline(int []xPoints, int []yPoints, int nPoints);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawText_sii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawText(String text, int x, int y);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawText_Ciiii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawText(char []chars, int start, int count, int x, int y);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawText_siii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawText(String text, int x, int y, int justifyWidth);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawHatchedRect_iiiibb(NMParams p) // totalcross/ui/gfx/Graphics native public void drawHatchedRect(int x, int y, int width, int height, boolean top, boolean bottom);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillHatchedRect_iiiibb(NMParams p) // totalcross/ui/gfx/Graphics native public void fillHatchedRect(int x, int y, int width, int height, boolean top, boolean bottom);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawRoundRect_iiiii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawRoundRect(int x, int y, int width, int height, int r);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillRoundRect_iiiii(NMParams p) // totalcross/ui/gfx/Graphics native public void fillRoundRect(int x, int y, int width, int height, int r);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_setClip_iiii(NMParams p) // totalcross/ui/gfx/Graphics native public void setClip(int x, int y, int w, int h);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_clip_r(NMParams p) // totalcross/ui/gfx/Graphics native public boolean clip(totalcross.ui.gfx.Rect r);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_copyRect_giiiiii(NMParams p) // totalcross/ui/gfx/Graphics native public void copyRect(totalcross.ui.gfx.GfxSurface surface, int x, int y, int width, int height, int dstX, int dstY);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawRoundGradient_iiiiiiiii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawRoundGradient(int startX, int startY, int endX, int endY, int topLeftRadius, int topRightRadius, int bottomLeftRadius, int bottomRightRadius,int startColor, int endColor, boolean vertical);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawImage_iiib(NMParams p) // totalcross/ui/gfx/Graphics native public void drawImage(totalcross.ui.image.Image image, int x, int y, boolean doClip);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_copyImageRect_iiiiib(NMParams p) // totalcross/ui/gfx/Graphics native public void copyImageRect(totalcross.ui.image.Image image, int x, int y, int width, int height, boolean doClip);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_setPixels_IIi(NMParams p) // totalcross/ui/gfx/Graphics native public void setPixels(int []xPoints, int []yPoints, int nPoints);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_refresh_iiiiiif(NMParams p) // totalcross/ui/gfx/Graphics native public void refresh(int sx, int sy, int sw, int sh, int tx, int ty, totalcross.ui.font.Font f);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawVistaRect_iiiiiiii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawVistaRect(int x, int y, int width, int height, int topColor, int rightColor, int bottomColor, int leftColor);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_draw3dRect_iiiibbbI(NMParams p) // totalcross/ui/gfx/Graphics native public void draw3dRect(int x, int y, int width, int height, byte type, boolean yMirror, boolean simple, int []fourColors);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillVistaRect_iiiiibb(NMParams p) // totalcross/ui/gfx/Graphics native public void fillVistaRect(int x, int y, int width, int height, int back, boolean invert, boolean rotate);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawArrow_iiibbi(NMParams p) // totalcross/ui/gfx/Graphics native public void drawArrow(int x, int y, int h, byte type, boolean pressed, int color);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawImage_iii(NMParams p) // totalcross/ui/gfx/Graphics native public void drawImage(totalcross.ui.image.Image image, int x, int y);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillEllipseGradient_iiii(NMParams p) // totalcross/ui/gfx/Graphics native public void fillEllipseGradient(int xc, int yc, int rx, int ry);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillPieGradient_iiidd(NMParams p) // totalcross/ui/gfx/Graphics native public void fillPieGradient(int xc, int yc, int r, double startAngle, double endAngle);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillEllipticalPieGradient_i(NMParams p) // totalcross/ui/gfx/Graphics native public void fillEllipticalPieGradient(int xc, int yc, int rx, int ry, double startAngle, double endAngle);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillCircleGradient_iii(NMParams p) // totalcross/ui/gfx/Graphics native public void fillCircleGradient(int xc, int yc, int r);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fillPolygonGradient_IIi(NMParams p) // totalcross/ui/gfx/Graphics native public void fillPolygonGradient(int []xPoints, int []yPoints, int nPoints);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_getRGB_Iiiiii(NMParams p) // totalcross/ui/gfx/Graphics native public int getRGB(int []data, int offset, int x, int y, int w, int h);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_setRGB_Iiiiii(NMParams p) // totalcross/ui/gfx/Graphics native public int setRGB(int []data, int offset, int x, int y, int w, int h);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_fadeScreen_i(NMParams p) // totalcross/ui/gfx/Graphics native public static void fadeScreen(int fadeValue);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawText_Ciiiibi(NMParams p) // totalcross/ui/gfx/Graphics native public void drawText(char []chars, int chrStart, int chrCount, int x, int y, boolean shadow, int shadowColor);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawText_siiiibi(NMParams p) // totalcross/ui/gfx/Graphics native public void drawText(StringBuffer sb, int chrStart, int chrCount, int x, int y, boolean shadow, int shadowColor);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawText_siiiiibi(NMParams p) // totalcross/ui/gfx/Graphics native public void drawText(StringBuffer sb, int chrStart, int chrCount, int x, int y, int justifyWidth, boolean shadow, int shadowColor);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawText_siibi(NMParams p) // totalcross/ui/gfx/Graphics native public void drawText(String text, int x, int y, boolean shadow, int shadowColor);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tugG_drawText_siiibi(NMParams p) // totalcross/ui/gfx/Graphics native public void drawText(String text, int x, int y, int justifyWidth, boolean shadow, int shadowColor);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tufF_fontCreate(NMParams p) // totalcross/ui/font/Font native void fontCreate();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tufFM_fontMetricsCreate(NMParams p) // totalcross/ui/font/FontMetrics native void fontMetricsCreate();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tufFM_charWidth_c(NMParams p) // totalcross/ui/font/FontMetrics native public int charWidth(char c);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tufFM_stringWidth_s(NMParams p) // totalcross/ui/font/FontMetrics native public int stringWidth(String s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tufFM_stringWidth_Cii(NMParams p) // totalcross/ui/font/FontMetrics native public int stringWidth(char []chars, int start, int count);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tufFM_sbWidth_s(NMParams p) // totalcross/ui/font/FontMetrics native public int sbWidth(StringBuffer s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tufFM_sbWidth_sii(NMParams p) // totalcross/ui/font/FontMetrics native public int sbWidth(StringBuffer s, int start, int count);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tufFM_charWidth_si(NMParams p) // totalcross/ui/font/FontMetrics native public int charWidth(StringBuffer s, int i);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tueE_isAvailable(NMParams p) // totalcross/ui/event/Event native public static boolean isAvailable();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuC_updateScreen(NMParams p) // totalcross/ui/Control native public static void updateScreen();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuMW_exit_i(NMParams p) // totalcross/ui/MainWindow native public static final void exit(int exitCode);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuMW_setTimerInterval_i(NMParams p) // totalcross/ui/MainWindow native void setTimerInterval(int n);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuMW_minimize(NMParams p) // totalcross/ui/MainWindow native public final void minimize();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuMW_restore(NMParams p) // totalcross/ui/MainWindow native public final void restore();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuMW_getCommandLine(NMParams p) // totalcross/ui/MainWindow native public static String getCommandLine();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuW_pumpEvents(NMParams p) // totalcross/ui/Window native public static void pumpEvents();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuW_setSIP_icb(NMParams p) // totalcross/ui/Window native public static void setSIP(int sipOption, totalcross.ui.Control control, boolean secret);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuW_setDeviceTitle_s(NMParams p) // totalcross/ui/Window native public static void setDeviceTitle(String title);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsCC_bytes2chars_Bii(NMParams p) // totalcross/sys/CharacterConverter native public char[]bytes2chars(byte []bytes, int offset, int length);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsCC_chars2bytes_Cii(NMParams p) // totalcross/sys/CharacterConverter native public byte[] chars2bytes(char []chars, int offset, int length);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsUTF8CC_bytes2chars_Bii(NMParams p) // totalcross/sys/UTF8CharacterConverter native public char[]bytes2chars(byte []bytes, int offset, int length);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsUTF8CC_chars2bytes_Cii(NMParams p) // totalcross/sys/UTF8CharacterConverter native public byte[] chars2bytes(char []chars, int offset, int length);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_toInt_s(NMParams p) // totalcross/sys/Convert native public static int toInt(String s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_toString_c(NMParams p) // totalcross/sys/Convert native public static String toString(char c);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_doubleToIntBits_d(NMParams p) // totalcross/sys/Convert native public static int doubleToIntBits(double d);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_intBitsToDouble_i(NMParams p) // totalcross/sys/Convert native public static double intBitsToDouble(int i);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_toString_i(NMParams p) // totalcross/sys/Convert native public static String toString(int i);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_toString_di(NMParams p) // totalcross/sys/Convert native public static String toString(double d, int precision);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_toDouble_s(NMParams p) // totalcross/sys/Convert native public static double toDouble(String s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_toString_si(NMParams p) // totalcross/sys/Convert native public static String toString(String doubleValue, int n);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_doubleToLongBits_d(NMParams p) // totalcross/sys/Convert native public static long doubleToLongBits(double value);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_longBitsToDouble_l(NMParams p) // totalcross/sys/Convert native public static double longBitsToDouble(long bits);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_toLowerCase_c(NMParams p) // totalcross/sys/Convert native public static char toLowerCase(char c);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_toUpperCase_c(NMParams p) // totalcross/sys/Convert native public static char toUpperCase(char c);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_unsigned2hex_ii(NMParams p) // totalcross/sys/Convert native public static String unsigned2hex(int b, int places);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_hashCode_s(NMParams p) // totalcross/sys/Convert native public static int hashCode(StringBuffer sb);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_getBreakPos_fsiib(NMParams p) // totalcross/sys/Convert native public static int getBreakPos(totalcross.ui.font.FontMetrics fm, StringBuffer sb, int start, int width, boolean doWordWrap);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_insertAt_sic(NMParams p) // totalcross/sys/Convert native public static void insertAt(StringBuffer sb, int pos, char c);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_append_sci(NMParams p) // totalcross/sys/Convert native public static void append(StringBuffer sb, char c, int count);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_toString_l(NMParams p) // totalcross/sys/Convert native public static String toString(long l);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_toLong_s(NMParams p) // totalcross/sys/Convert native public static long toLong(String s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_fill_Ciic(NMParams p) // totalcross/sys/Convert native public static void fill(char []a, int from, int to, char value);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_fill_Biib(NMParams p) // totalcross/sys/Convert native public static void fill(boolean []a, int from, int to, boolean value);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_fill_Iiii(NMParams p) // totalcross/sys/Convert native public static void fill(int []a, int from, int to, int value);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_fill_Diid(NMParams p) // totalcross/sys/Convert native public static void fill(double []a, int from, int to, double value);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_fill_Siii(NMParams p) // totalcross/sys/Convert native public static void fill(short []a, int from, int to, int value);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_fill_Biii(NMParams p) // totalcross/sys/Convert native public static void fill(byte []a, int from, int to, int value);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_fill_Liil(NMParams p) // totalcross/sys/Convert native public static void fill(long []a, int from, int to, long value);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_fill_Oiio(NMParams p) // totalcross/sys/Convert native public static void fill(Object []a, int from, int to, Object value);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_replace_sss(NMParams p) // totalcross/sys/Convert native public static String replace(String source, String from, String to);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_getBytes_s(NMParams p) // totalcross/sys/Convert native public static byte[] getBytes(StringBuffer sb);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_numberOf_sc(NMParams p) // totalcross/sys/Convert native public static int numberOf(String s, char c);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_zeroPad_si(NMParams p) // totalcross/sys/Convert native public static String zeroPad(String s, int size);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_zeroPad_ii(NMParams p) // totalcross/sys/Convert native public static String zeroPad(int s, int size);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_dup_ci(NMParams p) // totalcross/sys/Convert native public static String dup(char c, int count);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_spacePad_sib(NMParams p) // totalcross/sys/Convert native public static String spacePad(String what, int count, boolean before);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_numberPad_si(NMParams p) // totalcross/sys/Convert native public static String numberPad(String s, int size);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsC_numberPad_ii(NMParams p) // totalcross/sys/Convert native public static String numberPad(int s, int size);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsT_update(NMParams p) // totalcross/sys/Time native void update();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsS_refresh(NMParams p) // totalcross/sys/Settings native public static void refresh();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_arrayCopy_oioii(NMParams p) // totalcross/sys/Vm native public static boolean arrayCopy(Object srcArray, int srcStart, Object dstArray, int dstStart, int length);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_preallocateArray_oi(NMParams p) // totalcross/sys/Vm native public static void preallocateArray(Object sample, int length);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_getTimeStamp(NMParams p) // totalcross/sys/Vm native public static int getTimeStamp();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_setTime_t(NMParams p) // totalcross/sys/Vm native public static void setTime(totalcross.sys.Time t);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_exitAndReboot(NMParams p) // totalcross/sys/Vm native public static void exitAndReboot();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_exec_ssib(NMParams p) // totalcross/sys/Vm native public static int exec(String command, String args, int launchCode, boolean wait);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_setAutoOff_b(NMParams p) // totalcross/sys/Vm native public static void setAutoOff(boolean enable);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_sleep_i(NMParams p) // totalcross/sys/Vm native public static void sleep(int millis);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_getFreeMemory(NMParams p) // totalcross/sys/Vm native public static int getFreeMemory();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_gc(NMParams p) // totalcross/sys/Vm native public static void gc();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_interceptSpecialKeys_I(NMParams p) // totalcross/sys/Vm native public static void interceptSpecialKeys(int []keys);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_debug_s(NMParams p) // totalcross/sys/Vm native public static void debug(String s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_alert_s(NMParams p) // totalcross/sys/Vm native public static void alert(String s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_clipboardCopy_s(NMParams p) // totalcross/sys/Vm native public static void clipboardCopy(String s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_clipboardPaste(NMParams p) // totalcross/sys/Vm native public static String clipboardPaste();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_attachLibrary_s(NMParams p) // totalcross/sys/Vm native public static boolean attachLibrary(String name);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_privateAttachNativeLibrary_s(NMParams p) // totalcross/sys/Vm native private static boolean privateAttachNativeLibrary(String name);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_isKeyDown_i(NMParams p) // totalcross/sys/Vm native public static boolean isKeyDown(int key);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_getFile_s(NMParams p) // totalcross/sys/Vm native public static byte[] getFile(String name);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_getRemainingBattery(NMParams p) // totalcross/sys/Vm native public static int getRemainingBattery();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_tweak_ib(NMParams p) // totalcross/sys/Vm native public static void tweak(int param, boolean set);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_getStackTrace_t(NMParams p) // totalcross/sys/Vm native public static String getStackTrace(Throwable t);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_showKeyCodes_b(NMParams p) // totalcross/sys/Vm native public static void showKeyCodes(boolean on);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_turnScreenOn_b(NMParams p) // totalcross/sys/Vm native public static boolean turnScreenOn(boolean on);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsV_vibrate_i(NMParams p) // totalcross/sys/Vm native public static void vibrate(int millis);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsR_getInt_iss(NMParams p) // totalcross/sys/Registry native public static int getInt(int hk, String key, String value) throws totalcross.util.ElementNotFoundException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsR_getString_iss(NMParams p) // totalcross/sys/Registry native public static String getString(int hk, String key, String value) throws totalcross.util.ElementNotFoundException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsR_getBlob_iss(NMParams p) // totalcross/sys/Registry native public static byte[] getBlob(int hk, String key, String value) throws totalcross.util.ElementNotFoundException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsR_set_issi(NMParams p) // totalcross/sys/Registry native public static void set(int hk, String key, String value, int data) throws Exception;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsR_set_isss(NMParams p) // totalcross/sys/Registry native public static void set(int hk, String key, String value, String data) throws Exception;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsR_set_issB(NMParams p) // totalcross/sys/Registry native public static void set(int hk, String key, String value, byte []data) throws Exception;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsR_delete_iss(NMParams p) // totalcross/sys/Registry native public static boolean delete(int hk, String key, String value);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tsR_list_is(NMParams p) // totalcross/sys/Registry native public static String[] list(int hk, String key);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_NewContact(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String NewContact();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_GetAllContacts(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String GetAllContacts();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_ViewAllContacts(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String ViewAllContacts();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_getIContactString_s(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String getIContactString(String oid);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_removeIContact_s(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static void removeIContact(String oid);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_editIContact_sssssssss(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static int editIContact(String oid, String title, String firstName, String middleName, String lastName, String suffix, String jobTitle, String department, String company, String workTel, String workTel2, String homeTel, String homeTel2, String mobileTel, String pager, String carTel, String workFax, String homeFax, String assistantTel, String radioTel, String email, String email2, String email3, String webPage, String workStreet, String workCity, String workState, String workZip, String workCountry, String officeLoc, String homeStreet, String homeCity, String homeState, String homeZip, String homeCountry, String otherStreet, String otherCity, String otherState, String otherZip, String otherCountry, String categories, String assistant, String birthdayAsDateHelperGenericDateString, String anniversaryAsDateHelperGenericDateString, String spouse, String children, String note);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_newAppointment(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String newAppointment();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_GetAllAppointments(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String GetAllAppointments();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_ViewAllAppointments(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String ViewAllAppointments();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_getIAppointmentString_(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String getIAppointmentString(String oid);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_removeIAppointment_s(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static void removeIAppointment(String oid);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_editIAppointment_sssss(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static int editIAppointment(String oid, String subject, String location, String categories, String reminderSoundFile, String note, String startDate, String endDate, String duration, String meetingStatus, String sensitivity, String busyStatus, String reminderOptions, String reminderMinutesBeforeStart, String allDayEvent, String isRecurring, String reminderIsSet, String recurrenceType, String occurrences, String interval, String dayOfWeek, String dayOfMonth, String weekOfMonth, String monthOfYear, String patternStartDate, String patternEndDate, String startTime, String endTime, String noEndDate, String recipients);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_ViewAllTasks(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String ViewAllTasks();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_GetAllTasks(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String GetAllTasks();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_newTask(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String newTask();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_getITaskString_s(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static String getITaskString(String oid);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_removeITask_s(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static void removeITask(String oid);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpcbIPOIC_editITask_ssssssssssss(NMParams p) // totalcross/pim/ce/builtin/IPOutlookItemCollection native public static int editITask(String restriction, String subject, String categories, String startDate, String dueDate, String importance, String complete, String isRecurring, String duration, String recurrenceType, String occurrences, String interval, String dayOfWeek, String dayOfMonth, String weekOfMonth, String monthOfYear, String patternStartDate, String patternEndDate, String startTime, String endTime, String noEndDate, String sensitivity, String teamTask, String reminderIsSet, String reminderOptions, String reminderTime, String note);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSL_dispose(NMParams p) // totalcross/net/ssl/SSL native public void dispose();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSL_handshakeStatus(NMParams p) // totalcross/net/ssl/SSL native public int handshakeStatus();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSL_getCipherId(NMParams p) // totalcross/net/ssl/SSL native public byte getCipherId();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSL_getSessionId(NMParams p) // totalcross/net/ssl/SSL native public byte[] getSessionId();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSL_getCertificateDN_i(NMParams p) // totalcross/net/ssl/SSL native public String getCertificateDN(int component);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSL_read_s(NMParams p) // totalcross/net/ssl/SSL native public int read(totalcross.net.ssl.SSLReadHolder rh);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSL_write_Bi(NMParams p) // totalcross/net/ssl/SSL native public int write(byte []out_data, int len);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSL_verifyCertificate(NMParams p) // totalcross/net/ssl/SSL native public int verifyCertificate();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSL_renegotiate(NMParams p) // totalcross/net/ssl/SSL native public int renegotiate();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSLCTX_create_ii(NMParams p) // totalcross/net/ssl/SSLCTX native public void create(int options, int num_sessions);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSLCTX_dispose(NMParams p) // totalcross/net/ssl/SSLCTX native public void dispose();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSLCTX_find_s(NMParams p) // totalcross/net/ssl/SSLCTX native public totalcross.net.ssl.SSL find(totalcross.net.Socket s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSLCTX_objLoad_iss(NMParams p) // totalcross/net/ssl/SSLCTX native public int objLoad(int obj_type, totalcross.io.Stream material, String password);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSLCTX_objLoad_iBis(NMParams p) // totalcross/net/ssl/SSLCTX native public int objLoad(int obj_type, byte []data, int len, String password);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSLCTX_newClient_sB(NMParams p) // totalcross/net/ssl/SSLCTX native public totalcross.net.ssl.SSL newClient(totalcross.net.Socket s, byte []session_id);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSLCTX_newServer_s(NMParams p) // totalcross/net/ssl/SSLCTX native public totalcross.net.ssl.SSL newServer(totalcross.net.Socket s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSLU_getConfig_i(NMParams p) // totalcross/net/ssl/SSLUtil native public static int getConfig(int which);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSLU_displayError_i(NMParams p) // totalcross/net/ssl/SSLUtil native public static void displayError(int error_code);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnsSSLU_version(NMParams p) // totalcross/net/ssl/SSLUtil native public static String version();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnCM_loadResources(NMParams p) // totalcross/net/ConnectionManager native private void loadResources();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnCM_setDefaultConfiguration_is(NMParams p) // totalcross/net/ConnectionManager native public static void setDefaultConfiguration(int type, String cfg) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnCM_open(NMParams p) // totalcross/net/ConnectionManager native public static void open() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnCM_open_i(NMParams p) // totalcross/net/ConnectionManager native public static void open(int type) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnCM_nativeClose(NMParams p) // totalcross/net/ConnectionManager native private static void nativeClose() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnCM_getHostAddress_s(NMParams p) // totalcross/net/ConnectionManager native public static String getHostAddress(String host) throws totalcross.net.UnknownHostException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnCM_getHostName_s(NMParams p) // totalcross/net/ConnectionManager native public static String getHostName(String host) throws totalcross.net.UnknownHostException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnCM_getLocalHost(NMParams p) // totalcross/net/ConnectionManager native public static String getLocalHost() throws totalcross.net.UnknownHostException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnCM_isAvailable_i(NMParams p) // totalcross/net/ConnectionManager native public static boolean isAvailable(int type) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnCM_releaseResources(NMParams p) // totalcross/net/ConnectionManager native private void releaseResources();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnS_socketCreate_siib(NMParams p) // totalcross/net/Socket native void socketCreate(final String host, final int port, final int timeout, final boolean noLinger);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnS_nativeClose(NMParams p) // totalcross/net/Socket native private void nativeClose() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnS_readWriteBytes_Biib(NMParams p) // totalcross/net/Socket native private int readWriteBytes(byte []buf, int start, int count, boolean isRead) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnSS_serversocketCreate_iiis(NMParams p) // totalcross/net/ServerSocket native void serversocketCreate(int port, int backlog, int timeout, String host) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tnSS_nativeClose(NMParams p) // totalcross/net/ServerSocket native private void nativeClose() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpCI_loadResources(NMParams p) // totalcross/phone/CellInfo native private void loadResources();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpCI_releaseResources(NMParams p) // totalcross/phone/CellInfo native private void releaseResources();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpCI_update(NMParams p) // totalcross/phone/CellInfo native public static void update();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpD_number_s(NMParams p) // totalcross/phone/Dial native public static void number(String number);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpD_hangup(NMParams p) // totalcross/phone/Dial native public static void hangup();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpSMS_send_ss(NMParams p) // totalcross/phone/SMS native public static void send(String destination, String message) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tpSMS_receive(NMParams p) // totalcross/phone/SMS native public static String[] receive() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlC_forName_s(NMParams p) // java/lang/Class native public static Class forName(String className) throws java.lang.ClassNotFoundException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlC_newInstance(NMParams p) // java/lang/Class native public Object newInstance() throws java.lang.InstantiationException, java.lang.IllegalAccessException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlC_isInstance_o(NMParams p) // java/lang/Class native public boolean isInstance(Object obj);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlO_toStringNative(NMParams p) // java/lang/Object native private String toStringNative();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlO_nativeHashCode(NMParams p) // java/lang/Object native private int nativeHashCode();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlO_getClass(NMParams p) // java/lang/Object native public final Class getClass();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_toUpperCase(NMParams p) // java/lang/String native public String toUpperCase();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_toLowerCase(NMParams p) // java/lang/String native public String toLowerCase();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_valueOf_d(NMParams p) // java/lang/String native public static String valueOf(double d);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_valueOf_c(NMParams p) // java/lang/String native public static String valueOf(char c);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_valueOf_i(NMParams p) // java/lang/String native public static String valueOf(int i);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_indexOf_i(NMParams p) // java/lang/String native public int indexOf(int c);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_indexOf_ii(NMParams p) // java/lang/String native public int indexOf(int c, int startIndex);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_equals_o(NMParams p) // java/lang/String native public boolean equals(Object obj);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_compareTo_s(NMParams p) // java/lang/String native public int compareTo(String s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_copyChars_CiCii(NMParams p) // java/lang/String native static boolean copyChars(char []srcArray, int srcStart, char []dstArray, int dstStart, int length);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_indexOf_si(NMParams p) // java/lang/String native public int indexOf(String c, int startIndex);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_indexOf_s(NMParams p) // java/lang/String native public int indexOf(String c);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_hashCode(NMParams p) // java/lang/String native public int hashCode();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_startsWith_si(NMParams p) // java/lang/String native public boolean startsWith(String prefix, int to);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_startsWith_s(NMParams p) // java/lang/String native public boolean startsWith(String prefix);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_endsWith_s(NMParams p) // java/lang/String native public boolean endsWith(String suffix);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_equalsIgnoreCase_s(NMParams p) // java/lang/String native public boolean equalsIgnoreCase(String s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_replace_cc(NMParams p) // java/lang/String native public String replace(char oldChar, char newChar);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_lastIndexOf_ii(NMParams p) // java/lang/String native public int lastIndexOf(int c, int startIndex);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_lastIndexOf_i(NMParams p) // java/lang/String native public int lastIndexOf(int c);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_trim(NMParams p) // java/lang/String native public String trim();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_valueOf_l(NMParams p) // java/lang/String native public static String valueOf(long l);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_lastIndexOf_s(NMParams p) // java/lang/String native public int lastIndexOf(String s);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_lastIndexOf_si(NMParams p) // java/lang/String native public int lastIndexOf(String s, int startIndex);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlS_getBytes(NMParams p) // java/lang/String native public byte []getBytes();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlSB_ensureCapacity_i(NMParams p) // java/lang/StringBuffer native public void ensureCapacity(int minimumCapacity);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlSB_setLength_i(NMParams p) // java/lang/StringBuffer native public void setLength(int newLength);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlSB_append_s(NMParams p) // java/lang/StringBuffer native public StringBuffer append(String str);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlSB_append_C(NMParams p) // java/lang/StringBuffer native public StringBuffer append(char []str);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlSB_append_Cii(NMParams p) // java/lang/StringBuffer native public StringBuffer append(char []str, int offset, int len);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlSB_append_c(NMParams p) // java/lang/StringBuffer native public StringBuffer append(char c);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlSB_append_i(NMParams p) // java/lang/StringBuffer native public StringBuffer append(int i);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlSB_append_l(NMParams p) // java/lang/StringBuffer native public StringBuffer append(long l);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlSB_append_d(NMParams p) // java/lang/StringBuffer native public StringBuffer append(double d);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlSB_delete_ii(NMParams p) // java/lang/StringBuffer native public StringBuffer delete(int start, int end);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlT_printStackTraceNative(NMParams p) // java/lang/Throwable native private void printStackTraceNative();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlT_yield(NMParams p) // java/lang/Thread native public static void yield();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlT_start(NMParams p) // java/lang/Thread native public void start();       
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void jlT_currentThread(NMParams p) // java/lang/Thread native public static java.lang.Thread currentThread();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidRD_isSupported_i(NMParams p) // totalcross/io/device/RadioDevice native public static boolean isSupported(int type) throws IllegalArgumentException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidRD_getState_i(NMParams p) // totalcross/io/device/RadioDevice native public static int getState(int type) throws IllegalArgumentException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidRD_setState_ii(NMParams p) // totalcross/io/device/RadioDevice native public static void setState(int type, int state) throws IllegalArgumentException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidPC_create_iiiii(NMParams p) // totalcross/io/device/PortConnector native void create(int number, int baudRate, int bits, int parity, int stopBits);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidPC_nativeClose(NMParams p) // totalcross/io/device/PortConnector native private void nativeClose();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidPC_setFlowControl_b(NMParams p) // totalcross/io/device/PortConnector native public boolean setFlowControl(boolean on);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidPC_readCheck(NMParams p) // totalcross/io/device/PortConnector native public int readCheck();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbDA_nativeDiscoveryAgent(NMParams p) // totalcross/io/device/bluetooth/DiscoveryAgent native private void nativeDiscoveryAgent();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbDA_cancelInquiry_d(NMParams p) // totalcross/io/device/bluetooth/DiscoveryAgent native public boolean cancelInquiry(totalcross.io.device.bluetooth.DiscoveryListener listener);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbDA_cancelServiceSearch_i(NMParams p) // totalcross/io/device/bluetooth/DiscoveryAgent native public boolean cancelServiceSearch(int transID);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbDA_retrieveDevices_i(NMParams p) // totalcross/io/device/bluetooth/DiscoveryAgent native public totalcross.io.device.bluetooth.RemoteDevice []retrieveDevices(int option);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbDA_nativeSearchServices_IUrd(NMParams p) // totalcross/io/device/bluetooth/DiscoveryAgent native public int nativeSearchServices(int []attrSet, totalcross.io.device.bluetooth.UUID []uuidSet, totalcross.io.device.bluetooth.RemoteDevice btDev, totalcross.io.device.bluetooth.DiscoveryListener discListener) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbDA_selectService_uib(NMParams p) // totalcross/io/device/bluetooth/DiscoveryAgent native public String selectService(totalcross.io.device.bluetooth.UUID uuid, int security, boolean master) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbDA_startInquiry_id(NMParams p) // totalcross/io/device/bluetooth/DiscoveryAgent native public boolean startInquiry(int accessCode, totalcross.io.device.bluetooth.DiscoveryListener listener) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbSPS_createSerialPortServer_s(NMParams p) // totalcross/io/device/bluetooth/SerialPortServer native private void createSerialPortServer(String uuid, String []params) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbSPS_accept(NMParams p) // totalcross/io/device/bluetooth/SerialPortServer native public totalcross.io.Stream accept() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbSPS_close(NMParams p) // totalcross/io/device/bluetooth/SerialPortServer native public void close() throws throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbSPC_createSerialPortClient_s(NMParams p) // totalcross/io/device/bluetooth/SerialPortClient native private void createSerialPortClient(String address, int port, String []params) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbSPC_readBytes_Bii(NMParams p) // totalcross/io/device/bluetooth/SerialPortClient native public int readBytes(byte []b, int offset, int count) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbSPC_writeBytes_Bii(NMParams p) // totalcross/io/device/bluetooth/SerialPortClient native public int writeBytes(byte []b, int offset, int count) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidbSPC_close(NMParams p) // totalcross/io/device/bluetooth/SerialPortClient native public void close() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidgGPS_startGPS(NMParams p) // totalcross/io/device/gps/GPS native private boolean startGPS() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidgGPS_updateLocation(NMParams p) // totalcross/io/device/gps/GPS native private int updateLocation();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tidgGPS_stopGPS(NMParams p) // totalcross/io/device/gps/GPS native private void stopGPS();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_create_sssi(NMParams p) // totalcross/io/PDBFile native private void create(String name, String creator, String type, int mode) throws totalcross.io.FileNotFoundException, totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_rename_s(NMParams p) // totalcross/io/PDBFile native public void rename(String newName) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_addRecord_i(NMParams p) // totalcross/io/PDBFile native public int addRecord(int size) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_addRecord_ii(NMParams p) // totalcross/io/PDBFile native public int addRecord(int size, int pos) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_resizeRecord_i(NMParams p) // totalcross/io/PDBFile native public void resizeRecord(int size) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_nativeClose(NMParams p) // totalcross/io/PDBFile native private void nativeClose();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_delete(NMParams p) // totalcross/io/PDBFile native public boolean delete() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_listPDBs_ii(NMParams p) // totalcross/io/PDBFile native public static String []listPDBs(int creatorId, int type);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_deleteRecord(NMParams p) // totalcross/io/PDBFile native public void deleteRecord() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_getRecordCount(NMParams p) // totalcross/io/PDBFile native public int getRecordCount();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_setRecordPos_i(NMParams p) // totalcross/io/PDBFile native public boolean setRecordPos(int pos) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_readWriteBytes_Biib(NMParams p) // totalcross/io/PDBFile native int readWriteBytes(byte []buf, int start, int count, boolean isRead) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_inspectRecord_Bii(NMParams p) // totalcross/io/PDBFile native public int inspectRecord(byte []buf, int recordPos, int offsetInRec) throws totalcross.io.IllegalArgumentIOException, totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_getRecordAttributes_i(NMParams p) // totalcross/io/PDBFile native public byte getRecordAttributes(int recordPos);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_setRecordAttributes_ib(NMParams p) // totalcross/io/PDBFile native public void setRecordAttributes(int recordPos, byte attr);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_getAttributes(NMParams p) // totalcross/io/PDBFile native public int getAttributes();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_setAttributes_i(NMParams p) // totalcross/io/PDBFile native public void setAttributes(int i);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiPDBF_searchBytes_Bii(NMParams p) // totalcross/io/PDBFile native public int searchBytes(byte []toSearch, int length, int offsetInRec);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_getDeviceAlias(NMParams p) // totalcross/io/File native private static String getDeviceAlias();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_create_sii(NMParams p) // totalcross/io/File native private void create(String path, int mode, int slot) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_nativeClose(NMParams p) // totalcross/io/File native private void nativeClose() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_isCardInserted_i(NMParams p) // totalcross/io/File native public static boolean isCardInserted(int slot);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_createDir(NMParams p) // totalcross/io/File native public void createDir() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_delete(NMParams p) // totalcross/io/File native public boolean delete() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_exists(NMParams p) // totalcross/io/File native public boolean exists();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_getSize(NMParams p) // totalcross/io/File native public int getSize() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_isDir(NMParams p) // totalcross/io/File native public boolean isDir();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_listFiles(NMParams p) // totalcross/io/File native public String []listFiles() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_readBytes_Bii(NMParams p) // totalcross/io/File native public int readBytes(byte []b, int off, int len) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_rename_s(NMParams p) // totalcross/io/File native public boolean rename(String path) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_setPos_i(NMParams p) // totalcross/io/File native public void setPos(int pos) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_writeBytes_Bii(NMParams p) // totalcross/io/File native public int writeBytes(byte []b, int off, int len) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_setAttributes_i(NMParams p) // totalcross/io/File native public void setAttributes(int attr) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_getAttributes(NMParams p) // totalcross/io/File native public int getAttributes() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_setTime_bt(NMParams p) // totalcross/io/File native public void setTime(byte whichTime, totalcross.sys.Time time) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_getTime_b(NMParams p) // totalcross/io/File native public totalcross.sys.Time getTime(byte whichTime) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_setSize_i(NMParams p) // totalcross/io/File native public void setSize(int newSize) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_getCardSerialNumber_i(NMParams p) // totalcross/io/File native public static String getCardSerialNumber(int slot) throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_flush(NMParams p) // totalcross/io/File native public void flush() throws totalcross.io.IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_listRoots(NMParams p) // totalcross/io/File native public static String []listRoots()
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_isEmpty(NMParams p) // totalcross/io/File native public boolean isEmpty() throws IOException
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tiF_chmod_i(NMParams p) // totalcross/io/File native public int chmod(int mod) throws IOException
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzCS_createInflate_s(NMParams p) // totalcross/util/zip/CompressedStream native protected Object createInflate(totalcross.io.Stream stream) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzCS_createDeflate_si(NMParams p) // totalcross/util/zip/CompressedStream native protected Object createDeflate(totalcross.io.Stream stream, int compressionType) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzCS_readBytes_Bii(NMParams p) // totalcross/util/zip/CompressedStream native public int readBytes(byte []buf, int start, int count) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzCS_writeBytes_Bii(NMParams p) // totalcross/util/zip/CompressedStream native public int writeBytes(byte []buf, int start, int count) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzCS_close(NMParams p) // totalcross/util/zip/CompressedStream native public void close() throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZS_createInflate_s(NMParams p) // totalcross/util/zip/ZipStream native protected Object createInflate(totalcross.io.Stream stream);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZS_createDeflate_si(NMParams p) // totalcross/util/zip/ZipStream native protected Object createDeflate(totalcross.io.Stream stream, int compressionType);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZS_available(NMParams p) // totalcross/util/zip/ZipStream native public int available() throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZS_getNextEntry(NMParams p) // totalcross/util/zip/ZipStream native public totalcross.util.zip.ZipEntry getNextEntry() throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZS_putNextEntry_z(NMParams p) // totalcross/util/zip/ZipStream native public void putNextEntry(totalcross.util.zip.ZipEntry zipEntry) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZS_closeEntry(NMParams p) // totalcross/util/zip/ZipStream native public void closeEntry() throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZS_readBytes_Bii(NMParams p) // totalcross/util/zip/ZipStream native public int readBytes(byte []buf, int start, int count) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZS_writeBytes_Bii(NMParams p) // totalcross/util/zip/ZipStream native public int writeBytes(byte []buf, int start, int count) throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuzZS_close(NMParams p) // totalcross/util/zip/ZipStream native public void close() throws IOException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void txXT_resolveCharacterReference_B(NMParams p) // totalcross/xml/XmlTokenizer native public static char resolveCharacterReference(byte []input, int offset, int count);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void txXT_setCdataContents_Bii(NMParams p) // totalcross/xml/XmlTokenizer native protected void setCdataContents(byte []input, int offset, int count);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void txXT_tokenizeBytes_B(NMParams p) // totalcross/xml/XmlTokenizer native private void tokenizeBytes(byte []input) throws SyntaxException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void txXT_endTokenize_B(NMParams p) // totalcross/xml/XmlTokenizer native private void endTokenize(byte []input) throws SyntaxException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void txXT_nativeCreate(NMParams p) // totalcross/xml/XmlTokenizer native private void nativeCreate();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tcdMD5D_nativeCreate(NMParams p) // totalcross/crypto/digest/MD5Digest native void nativeCreate();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tcdMD5D_process_B(NMParams p) // totalcross/crypto/digest/MD5Digest native protected final byte[] process(byte []data);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tcdSHA1D_nativeCreate(NMParams p) // totalcross/crypto/digest/SHA1Digest native void nativeCreate();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tcdSHA1D_process_B(NMParams p) // totalcross/crypto/digest/SHA1Digest native protected final byte[] process(byte []data);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tcdSHA256D_nativeCreate(NMParams p) // totalcross/crypto/digest/SHA256Digest native void nativeCreate();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tcdSHA256D_process_B(NMParams p) // totalcross/crypto/digest/SHA256Digest native protected final byte[] process(byte []data);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tccAESC_nativeCreate(NMParams p) // totalcross/crypto/cipher/AESCipher native void nativeCreate();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tccAESC_doReset(NMParams p) // totalcross/crypto/cipher/AESCipher native protected final void doReset() throws totalcross.crypto.CryptoException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tccAESC_process_B(NMParams p) // totalcross/crypto/cipher/AESCipher native protected byte[] process(byte []data) throws totalcross.crypto.CryptoException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tccRSAC_nativeCreate(NMParams p) // totalcross/crypto/cipher/RSACipher native void nativeCreate();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tccRSAC_finalize(NMParams p) // totalcross/crypto/cipher/RSACipher native protected final void finalize();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tccRSAC_doReset(NMParams p) // totalcross/crypto/cipher/RSACipher native protected final void doReset() throws totalcross.crypto.CryptoException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tccRSAC_process_B(NMParams p) // totalcross/crypto/cipher/RSACipher native protected byte[] process(byte []data) throws totalcross.crypto.CryptoException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tcsPKCS1S_nativeCreate(NMParams p) // totalcross/crypto/signature/PKCS1Signature native void nativeCreate();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tcsPKCS1S_finalize(NMParams p) // totalcross/crypto/signature/PKCS1Signature native protected final void finalize();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tcsPKCS1S_doReset(NMParams p) // totalcross/crypto/signature/PKCS1Signature native protected final void doReset() throws totalcross.crypto.CryptoException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tcsPKCS1S_doSign_B(NMParams p) // totalcross/crypto/signature/PKCS1Signature native protected final byte[] doSign(byte []data) throws totalcross.crypto.CryptoException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tcsPKCS1S_doVerify_BB(NMParams p) // totalcross/crypto/signature/PKCS1Signature native protected final boolean doVerify(byte []data, byte []signature) throws totalcross.crypto.CryptoException;
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void rU_getConfigInfo(NMParams p) // ras/Utils native public static totalcross.util.Hashtable getConfigInfo();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void rU_getProductInfo(NMParams p) // ras/Utils native public static totalcross.util.Hashtable getProductInfo();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void rU_getDeviceInfo(NMParams p) // ras/Utils native public static totalcross.util.Hashtable getDeviceInfo();
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_add_1_IIii(NMParams p) // totalcross/util/BigInteger native static int add_1(int []dest, int []x, int size, int y);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_add_n_IIIi(NMParams p) // totalcross/util/BigInteger native static int add_n(int []dest, int []x, int []y, int len);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_sub_n_IIIi(NMParams p) // totalcross/util/BigInteger native static int sub_n(int []dest, int []x, int []y, int size);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_mul_1_IIii(NMParams p) // totalcross/util/BigInteger native static int mul_1(int []dest, int []x, int len, int y);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_mul_IIiIi(NMParams p) // totalcross/util/BigInteger native static void mul(int []dest, int []x, int xlen, int []y, int ylen);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_udiv_qrnnd_li(NMParams p) // totalcross/util/BigInteger native static long udiv_qrnnd(long n, int d);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_divmod_1_IIii(NMParams p) // totalcross/util/BigInteger native static int divmod_1(int []quotient, int []dividend, int len, int divisor);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_submul_1_IiIii(NMParams p) // totalcross/util/BigInteger native static int submul_1(int []dest, int offset, int []x, int len, int y);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_divide_IiIi(NMParams p) // totalcross/util/BigInteger native static void divide(int []zds, int nx, int []y, int ny);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_chars_per_word_i(NMParams p) // totalcross/util/BigInteger native static int chars_per_word(int radix);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_count_leading_zeros_i(NMParams p) // totalcross/util/BigInteger native static int count_leading_zeros(int i);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_set_str_IBii(NMParams p) // totalcross/util/BigInteger native static int set_str(int []dest, byte []str, int str_len, int base);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_cmp_IIi(NMParams p) // totalcross/util/BigInteger native static int cmp(int []x, int []y, int size);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_cmp_IiIi(NMParams p) // totalcross/util/BigInteger native static int cmp(int []x, int xlen, int []y, int ylen);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_rshift_IIiii(NMParams p) // totalcross/util/BigInteger native static int rshift(int []dest, int []x, int x_start, int len, int count);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_rshift0_IIiii(NMParams p) // totalcross/util/BigInteger native static void rshift0(int []dest, int []x, int x_start, int len, int count);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_rshift_long_Iii(NMParams p) // totalcross/util/BigInteger native static long rshift_long(int []x, int len, int count);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_lshift_IiIii(NMParams p) // totalcross/util/BigInteger native static int lshift(int []dest, int d_offset, int []x, int len, int count);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_findLowestBit_i(NMParams p) // totalcross/util/BigInteger native static int findLowestBit(int word);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_findLowestBit_I(NMParams p) // totalcross/util/BigInteger native static int findLowestBit(int []words);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_gcd_IIi(NMParams p) // totalcross/util/BigInteger native static int gcd(int []x, int []y, int len);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_intLength_i(NMParams p) // totalcross/util/BigInteger native static int intLength(int i);
{
}
//////////////////////////////////////////////////////////////////////////
TC_API void tuBI_intLength_Ii(NMParams p) // totalcross/util/BigInteger native static int intLength(int []words, int len);
{
}
