/*********************************************************************************
 *  TotalCross Software Development Kit                                          *
 *  Copyright (C) 2000-2011 SuperWaba Ltda.                                      *
 *  All Rights Reserved                                                          *
 *                                                                               *
 *  This library and virtual machine is distributed in the hope that it will     *
 *  be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                         *
 *                                                                               *
 *********************************************************************************/

// $Id: errormsg_c.h,v 1.9 2011-01-04 13:31:04 guich Exp $

static CharP getMessageFromCode(int32 code)
{
   switch (code)
   {
      case 0x0101 : return "Memory chunk already locked";
      case 0x0102 : return "Memory out of space";
      case 0x0103 : return "Invalid param or requested size is too big";
      case 0x0104 : return "Chunk not locked";
      case 0x0105 : return "Card Not Present";
      case 0x0106 : return "No Card Header";
      case 0x0107 : return "Invalid Store Header";
      case 0x0108 : return "RAM-Only Card";
      case 0x0109 : return "Write Protect";
      case 0x010A : return "No RAM On Card";
      case 0x010B : return "No Store";
      case 0x010C : return "ROM-Only Card";
      case 0x0201 : return "Out of memory, delete old data or unneeded applications";
      case 0x0202 : return "Index out of range";
      case 0x0203 : return "Invalid parameter";
      case 0x0204 : return "Read only";
      case 0x0205 : return "Already open";
      case 0x0206 : return "Can't open";
      case 0x0207 : return "Can't find";
      case 0x0208 : return "Record in wrong card";
      case 0x0209 : return "Corrupt database";
      case 0x020A : return "Record deleted";
      case 0x020B : return "Record archived";
      case 0x020C : return "Not record database";
      case 0x020D : return "Not resource database";
      case 0x020E : return "ROM based database";
      case 0x020F : return "Record busy";
      case 0x0210 : return "Resource not found";
      case 0x0211 : return "No open database";
      case 0x0212 : return "Invalid category";
      case 0x0213 : return "Invalid record";
      case 0x0214 : return "Write out of bounds";
      case 0x0215 : return "Seek failed";
      case 0x0216 : return "Already open for writes";
      case 0x0217 : return "Opened by another task";
      case 0x0218 : return "Unique ID not found";
      case 0x0219 : return "Already exists";
      case 0x021A : return "Invalid name";
      case 0x021B : return "Database protected";
      case 0x021C : return "Database not protected";
      case 0x0301 : return "Bad parameter";
      case 0x0302 : return "Bad port";
      case 0x0303 : return "No more memory";
      case 0x0304 : return "Bad connection id";
      case 0x0305 : return "Serial: timeout, could be bad cable or faulty Modem";
      case 0x0306 : return "Serial: line error";
      case 0x0307 : return "Serial: port in use";
      case 0x0308 : return "Still open";
      case 0x0309 : return "Not open";
      case 0x030A : return "Functionality not supported";
      case 0x030B : return "No serial devices were loaded or are available";
      case 0x030C : return "Configuration failed";
      case 0x0401 : return "Bad checksum";
      case 0x0402 : return "Bad format";
      case 0x0403 : return "Bad buffer";
      case 0x0404 : return "Time out";
      case 0x0405 : return "Bad handle";
      case 0x0406 : return "Bad body limit";
      case 0x0407 : return "Bad transmission id";
      case 0x0408 : return "Bad response";
      case 0x0409 : return "No default procedure";
      case 0x040A : return "Wrong packet type";
      case 0x040B : return "Bad parameter";
      case 0x040C : return "Already open";
      case 0x040D : return "Out of sockets";
      case 0x040E : return "Socket not open";
      case 0x040F : return "Wrong destination socket";
      case 0x0410 : return "Wrong packet type";
      case 0x0411 : return "Called while sending a packet";
      case 0x0412 : return "Not open";
      case 0x0501 : return "Time out";
      case 0x0502 : return "Bad parameter";
      case 0x0503 : return "No free resources";
      case 0x0504 : return "No more memory";
      case 0x0505 : return "Operation not allowed";
      case 0x0506 : return "Semaphore in use";
      case 0x0507 : return "Invalid id";
      case 0x0508 : return "Out of owner ids";
      case 0x0509 : return "No more free lib slots";
      case 0x050A : return "Library not found";
      case 0x050B : return "SysTaskDelay wakened by SysTaskWake before delay completed";
      case 0x050C : return "ROM is incompatible";
      case 0x050D : return "Buffer too small";
      case 0x050E : return "Preference not found";
      case 0x050F : return "Could not find registration entry in the list";
      case 0x0510 : return "Identical entry already exists";
      case 0x0511 : return "A broadcast is already in progress - try again later";
      case 0x0512 : return "A handler cancelled the broadcast";
      case 0x0519 : return "Deferred queue is full";
      case 0x051A : return "Deferred queue is empty";
      case 0x051B : return "Not enough stack space for a broadcast";
      case 0x051C : return "Manager is not initialized";
      case 0x051D : return "Task woken by SysTaskWake was not asleep, 1 wake pending";
      case 0x051E : return "Task woken by SysTaskWake was not asleep, >1 wake pending";
      case 0x0681 : return "Floating point out of range";
      case 0x0701 : return "Parameter error";
      case 0x0702 : return "Queue is full";
      case 0x0703 : return "Queue is empty";
      case 0x0801 : return "Bad parameter";
      case 0x0802 : return "Bad channel";
      case 0x0803 : return "Not enough memory";
      case 0x0804 : return "Already open";
      case 0x0805 : return "Queue is full";
      case 0x0806 : return "Queue is empty";
      case 0x0807 : return "Unsupported data format";
      case 0x0808 : return "Invalid data stream";
      case 0x0809 : return "Play was interrupted";
      case 0x080A : return "Function not implemented";
      case 0x080B : return "Invalid stream-identifier";
      case 0x0901 : return "Ran out of memory";
      case 0x0902 : return "Alarm table is full";
      case 0x0A01 : return "No more memory";
      case 0x0B01 : return "Bad parameter";
      case 0x0B02 : return "Point ignored";
      case 0x0C01 : return "Feature invalid parameter";
      case 0x0C02 : return "No such feature";
      case 0x0C03 : return "Feature already exists";
      case 0x0C04 : return "This is a ROM based feature";
      case 0x0C05 : return "Feature internal error";
      case 0x0E01 : return "Invalid parameter";
      case 0x0E02 : return "Memory allocation error";
      case 0x0E03 : return "Could not establish a session";
      case 0x0E04 : return "Reply length was too big";
      case 0x0E05 : return "Lost connection";
      case 0x0E06 : return "Sync was interrupted (see sync state)";
      case 0x0E07 : return "Cancelled by user";
      case 0x0E08 : return "Incompatible desktop version";
      case 0x0E09 : return "New Password, Old Desktop";
      case 0x1101 : return "No dial tone";
      case 0x1102 : return "The network is busy, unavailable or data is not enabled";
      case 0x1103 : return "Incorrect or busy phone number";
      case 0x1104 : return "User cancel";
      case 0x1105 : return "Modem command error, check Connection Preferences";
      case 0x1106 : return "No modem detected, confirm that the correct connection type is selected in Network prefs";
      case 0x1107 : return "Out of memory";
      case 0x1108 : return "Modem not setup";
      case 0x1109 : return "Phone number is too long or contains invalid characters";
      case 0x110A : return "Phone number is needed to make this connection";
      case 0x1201 : return "Already open";
      case 0x1202 : return "Not open";
      case 0x1203 : return "Still open";
      case 0x1204 : return "Parameter err";
      case 0x1205 : return "No more sockets";
      case 0x1206 : return "Out of resources";
      case 0x1207 : return "Out of memory";
      case 0x1208 : return "Socket not open";
      case 0x1209 : return "Socket busy";
      case 0x120A : return "Message too big";
      case 0x120B : return "Socket not connected";
      case 0x120C : return "Your Internet connection is not set up, go to the Network preferences to set it up";
      case 0x120D : return "Buffer too small";
      case 0x120E : return "Unimplemented";
      case 0x120F : return "Port in use";
      case 0x1210 : return "Quiet time not elapsed";
      case 0x1211 : return "Internal err";
      case 0x1212 : return "Timeout";
      case 0x1213 : return "Socket already connected";
      case 0x1214 : return "Socket closed by peer";
      case 0x1215 : return "Out of cmd blocks";
      case 0x1216 : return "Wrong socket type";
      case 0x1217 : return "Socket not listening";
      case 0x1218 : return "Unknown setting";
      case 0x1219 : return "Invalid setting size";
      case 0x121A : return "Incomplete setup, please check your network settings";
      case 0x121B : return "Invalid interface";
      case 0x121C : return "Interface not found";
      case 0x121D : return "Too many interfaces";
      case 0x121E : return "Buffer wrong size";
      case 0x121F : return "User cancel";
      case 0x1220 : return "Bad script";
      case 0x1221 : return "No socket";
      case 0x1222 : return "Socket receive buffer full";
      case 0x1223 : return "No pending connect";
      case 0x1224 : return "Unexpected command";
      case 0x1225 : return "No TCB";
      case 0x1226 : return "Nil remote window size";
      case 0x1227 : return "No timer proc";
      case 0x1228 : return "Socket input shutdown";
      case 0x1229 : return "Cmd block not checked out";
      case 0x122A : return "Cmd not done";
      case 0x122B : return "Unknown protocol";
      case 0x122C : return "Unknown service";
      case 0x122D : return "Unreachable destination";
      case 0x122E : return "Read only setting";
      case 0x122F : return "Would block";
      case 0x1230 : return "Already in progress";
      case 0x1231 : return "PPP timeout";
      case 0x1232 : return "PPP brought down";
      case 0x1233 : return "Please check your username and password and try again";
      case 0x1234 : return "IP address refused";
      case 0x1235 : return "DNS name too long";
      case 0x1236 : return "Bad DNS name";
      case 0x1237 : return "Bad DNS arguments";
      case 0x1238 : return "DNS label too long";
      case 0x1239 : return "DNS out of memory";
      case 0x123A : return "DNS timeout";
      case 0x123B : return "DNS unreachable";
      case 0x123C : return "Bad DNS format";
      case 0x123D : return "DNS server failure";
      case 0x123E : return "Nonexistant DNS name";
      case 0x123F : return "DNS NIY";
      case 0x1240 : return "DNS refused";
      case 0x1241 : return "DNS impossible";
      case 0x1242 : return "DNS no resource records";
      case 0x1243 : return "DNS aborted";
      case 0x1244 : return "DNS bad protocol";
      case 0x1245 : return "DNS truncated";
      case 0x1246 : return "DNS no recursion";
      case 0x1247 : return "DNS irrelevant";
      case 0x1248 : return "DNS not in local cache";
      case 0x1249 : return "DNS no port";
      case 0x124A : return "Can't fragment";
      case 0x124B : return "No route";
      case 0x124C : return "No source addr";
      case 0x124D : return "No destination addr";
      case 0x124E : return "Packet overflow";
      case 0x124F : return "Too many connections";
      case 0x1250 : return "The DNS server address is not setup properly";
      case 0x1251 : return "Interface is down";
      case 0x1252 : return "Your area may have weak or no coverage, try moving near a window or open area";
      case 0x1253 : return "We received a request to deactivate this handheld";
      case 0x1254 : return "Illegal logout";
      case 0x1255 : return "The Palm.Net service is busy or unavailable";
      case 0x1256 : return "We received a request to deactivate this handheld";
      case 0x1257 : return "The wireless network is busy or unavailable";
      case 0x1258 : return "The wireless network is busy or unavailable";
      case 0x1259 : return "The wireless network is busy or unavailable";
      case 0x125A : return "To use the wireless features, you must first activate the Palm.Net service. To activate the service, go to the Applications Launcher and tap the Activate icon";
      case 0x125B : return "Your transaction did not complete successfully. Move to an area with better coverage";
      case 0x125C : return "Flex list full";
      case 0x125D : return "Invalid sender MAN";
      case 0x125E : return "Illegal type";
      case 0x125F : return "Illegal state";
      case 0x1260 : return "Illegal flags";
      case 0x1261 : return "Illegal send list";
      case 0x1262 : return "Illegal length";
      case 0x1263 : return "Illegal addressee";
      case 0x1264 : return "Illegal packet class";
      case 0x1265 : return "Invalid buffer length";
      case 0x1266 : return "The transmitter charge is too low for wireless transactions. Recharging will start now";
      case 0x1267 : return "The transmitter hardware failed to initialize. Try again. If you receive this message again, note the error code";
      case 0x1268 : return "Illegal logout";
      case 0x1269 : return "The AAA battery level is too low for wireless transactions. Perform a HotSync operation and replace the batteries as soon as possible";
      case 0x126A : return "Raise the antenna to perform wireless transactions. Tap Cancel to stop this wireless operation";
      case 0x126B : return "Your transmitter is being charged now. You cannot perform wireless transactions at this time. To see charging end time, tap OK, and then tap Details in Diagnostics";
      case 0x126C : return "The antenna has been lowered during wireless operation. Raise it to continue this operation";
      case 0x126D : return "You have not activated the Palm.Net� wireless communication service. To activate the service, go to the Applications Launcher and tap the Activate icon";
      case 0x126E : return "The transmitter is either too cold or too hot to work properly. Wait until the transmitter regains a normal temperature, and then try again";
      case 0x126F : return "Charging was interrupted. The transmitter power source may need to be replaced";
      case 0x1270 : return "The transmitter power source may need to be replaced. The handheld will attempt to charge the transmitter now to verify its function. If charging fails";
      case 0x1271 : return "The AAA battery level is too low to finish charging the transmitter. Perform a HotSync operation and install new AAA batteries as soon as possible to resume charging";
      case 0x1272 : return "Configuration not found";
      case 0x1273 : return "Cannot delete configuration";
      case 0x1274 : return "Too many configurations";
      case 0x1275 : return "Bad configuration name";
      case 0x1276 : return "Configuration is not an alias";
      case 0x1277 : return "Configuration can't point to alias";
      case 0x1278 : return "Configuration is empty";
      case 0x1279 : return "Already open with another configuration";
      case 0x127A : return "Alias error";
      case 0x127B : return "No multi packet address";
      case 0x127C : return "Attempted to send multi-packet request without a fixed MAN. Send a small request first to update the server's fixed MAN";
      case 0x127D : return "Out of packets";
      case 0x127E : return "Your handheld needs an updated server address. Try your transaction again";
      case 0x127F : return "Internal error. Try your transaction again";
      case 0x1280 : return "Script plug-in is missing";
      case 0x1281 : return "Script plug-in failed to launch";
      case 0x1282 : return "Script plug-in command failed";
      case 0x1283 : return "The script plug-in is trying to execute an unknown command";
      case 0x1284 : return "Unable to load Phone Services";
      case 0x1285 : return "Unable to use phone services because of an unhandled error";
      case 0x1286 : return "Failure when initialising devic";
      case 0x1287 : return "Incompatible interface";
      case 0x1401 : return "Too many clients already";
      case 0x1402 : return "Invalid inetH or sockH";
      case 0x1403 : return "Invalid parameters";
      case 0x1404 : return "Invalid URL version";
      case 0x1405 : return "URL buffer too small";
      case 0x1406 : return "Invalid URL";
      case 0x1407 : return "Too many sockets";
      case 0x1408 : return "Request not created";
      case 0x1409 : return "Not connected";
      case 0x140A : return "Invalid request";
      case 0x140B : return "Not ready, need time";
      case 0x140C : return "Invalid host name";
      case 0x140D : return "Cannot connect to proxy server. Server port identified in Web Clipping panel is not correct";
      case 0x140E : return "Invalid host address";
      case 0x140F : return "Nil buffer";
      case 0x1410 : return "Connection time out";
      case 0x1411 : return "Resolve time out";
      case 0x1412 : return "Send request time out";
      case 0x1413 : return "Read time out";
      case 0x1414 : return "Buffer too small";
      case 0x1415 : return "The application tried to connect to the Internet using a protocol that is not supported";
      case 0x1416 : return "Invalid response from host";
      case 0x1417 : return "Setting is too large";
      case 0x1418 : return "Setting size is invalid";
      case 0x1419 : return "Request too long";
      case 0x141A : return "Setting not implemented";
      case 0x141B : return "Configuration not found";
      case 0x141C : return "Can't delete configuration";
      case 0x141D : return "Too many configurations";
      case 0x141E : return "Bad configuration name";
      case 0x141F : return "Configuration not an alias";
      case 0x1420 : return "Configuration can't point to alias";
      case 0x1421 : return "Configuration is empty";
      case 0x1422 : return "Configuration alias error";
      case 0x1423 : return "No wireless interface";
      case 0x1424 : return "Encryption not available";
      case 0x1425 : return "Need to re-send transaction because server told us to reset our encryption sequence number";
      case 0x1426 : return "Need to re-send transaction because server sent us a new public key to use";
      case 0x1427 : return "Data encryption is not available on this handheld";
      case 0x1428 : return "The server has updated the security sequence number";
      case 0x1429 : return "The server has updated the security key";
      case 0x142A : return "The response was shorter than expected";
      case 0x142B : return "We received a request to deactivate this handheld";
      case 0x142C : return "Your handheld tried to connect to an invalid proxy server";
      case 0x142D : return "A \"Bad Request\" error occurred in the application you are using";
      case 0x142E : return "Authentication is required in the application you are using";
      case 0x142F : return "This request is not allowed by the web server";
      case 0x1430 : return "The clipping you requested is not available";
      case 0x1431 : return "The query used an incorrect submission method";
      case 0x1432 : return "The response to your query contained a data format that is not supported by the query application";
      case 0x1433 : return "Proxy authentication is required";
      case 0x1434 : return "Your transaction has timed out. The network may be busy";
      case 0x1435 : return "The request resulted in a conflict";
      case 0x1436 : return "The resource that you tried to contact has been removed from the web server";
      case 0x1437 : return "The web clipping proxy server failed to provide content length to the web server";
      case 0x1438 : return "Precondition failed on the web server";
      case 0x1439 : return "The submitted request is too large. It was rejected by the web server";
      case 0x143A : return "The requested URL is too long";
      case 0x143B : return "The request contained a media type that is not supported by the web server";
      case 0x143C : return "The Web server was unable to process the request due to an error on the server";
      case 0x143D : return "CTP server error";
      case 0x143E : return "Type not in cache";
      case 0x143F : return "Cache invalid";
      case 0x1440 : return "URL dispatched";
      case 0x1441 : return "Database not found";
      case 0x1442 : return "The request was rejected by the web clipping proxy server because its format is invalid";
      case 0x1443 : return "The request was rejected by the web clipping proxy server because its format is invalid";
      case 0x1444 : return "Socket error";
      case 0x1445 : return "Invalid URL";
      case 0x1446 : return "Referring page out of date";
      case 0x1447 : return "Bad request";
      case 0x1448 : return "You tried to access the web using an invalid address";
      case 0x1449 : return "The query application you are using does not match its counterpart on the server";
      case 0x144A : return "Host not found";
      case 0x144B : return "Invalid content tag";
      case 0x144C : return "Your handheld cannot connect to the iMessenger� server at this time";
      case 0x144D : return "Content conversion error - reached end of data";
      case 0x144E : return "Content conversion error - invalid tag";
      case 0x144F : return "Internal content conversion error";
      case 0x1450 : return "Content: unexpected end of data";
      case 0x1451 : return "Content: resource too big";
      case 0x1452 : return "Content: frames present in HTML without noframes tag";
      case 0x1453 : return "Content: unsupported content type";
      case 0x1454 : return "Content: unsupported content encoding";
      case 0x1455 : return "Content: bad form";
      case 0x1456 : return "Content: missing action attribute in form";
      case 0x1457 : return "Content: missing method attribute in form";
      case 0x1458 : return "Content: empty HTML page // This error is sent after INetLib handles inetErrMobitexIllegalOKHost or inetErrMobitexIllegalBadHost errors";
      case 0x1459 : return "Content: bad image // Proxy down, non-default host, show dialog asking to revert to default";
      case 0x145A : return "Content: image too large // A second type of readtime. This should occur only when some data is received and the connection is lost";
      case 0x145B : return "An error occured and was handled by the lower level code. // Unable to locate link record within a PQA file";
      case 0x145C : return "The proxy server configured in the wireless preferences did not respond. This server may be temporarily unavailable";
      case 0x1501 : return "Out of memory error";
      case 0x1502 : return "Stack could not initialize";
      case 0x1503 : return "User canceled operation";
      case 0x1504 : return "Receiver device not found";
      case 0x1505 : return "Can't find a target app";
      case 0x1506 : return "Target app is known but missing";
      case 0x1507 : return "Operation not allowed";
      case 0x1508 : return "Internal data was not valid";
      case 0x1509 : return "Generic application error";
      case 0x150A : return "Unknown general error";
      case 0x150B : return "Device is full";
      case 0x150C : return "Link disconnected";
      case 0x150D : return "Requested object not found";
      case 0x150E : return "Bad parameter to call";
      case 0x150F : return "Operation not supported by this library";
      case 0x1510 : return "Device is busy";
      case 0x1511 : return "Bad or missing ExgLibrary";
      case 0x1512 : return "Device has not enough power to perform the requested operation";
      case 0x1602 : return "Out of memory error";
      case 0x1603 : return "Invalid parameter value passed";
      case 0x1604 : return "The file is corrupted/invalid/not a stream file";
      case 0x1605 : return "Couldn't find the file";
      case 0x1606 : return "File's type and creator didn't match those expected";
      case 0x1607 : return "Couldn't replace an existing file";
      case 0x1608 : return "Couldn't create a new file";
      case 0x1609 : return "Generic open error";
      case 0x160A : return "File couldn't be opened or deleted because it is in use";
      case 0x160B : return "Couldn't open in write mode because db is read-only";
      case 0x160C : return "Invalid file descriptor (FileHandle)";
      case 0x160D : return "Error closing the database";
      case 0x160E : return "Attempted operation went out of bounds of the file";
      case 0x160F : return "Couldn't write to a file open for read-only access";
      case 0x1610 : return "General I/O error";
      case 0x1611 : return "End-of-file error";
      case 0x1612 : return "Attempted to open a file that is not a stream";
      case 0x1E01 : return "Backlight unavailable because your batteries are too low. Reducing your power usage may help";
      case 0x1E02 : return "Transmitter has been temporarily disabled";
      case 0x1E03 : return "Send failed because your batteries are too low. Reducing your power usage may help";
      case 0x1E04 : return "Your batteries are too low to perform this operation. Reducing your power usage may help";
      case 0x1F01 : return "Add profile attempt failed";
      case 0x1F02 : return "Add attempt failed because the profile list is full";
      case 0x1F03 : return "Get profile attempt failed";
      case 0x1F04 : return "Connection database not found or access failed";
      case 0x1F05 : return "Could not get profile list";
      case 0x1F06 : return "The profile can not be altered";
      case 0x1F07 : return "The profile could not be found";
      case 0x1F08 : return "The profile parameter could not be found";
      case 0x1F09 : return "The profile parameter can only be read";
      case 0x1F0A : return "The profile parameter Name has been modified to be unique";
      case 0x1F0B : return "Failed to get a parameter in a profile";
      case 0x1F0C : return "Failed to Set a parameter in a profile";
      case 0x1F0D : return "Failed to Set a parameter in a profile";
      case 0x1F0E : return "The bit num of a system flag is not comprise between 0 and 31";
      case 0x2401 : return "Palette error";
      case 0x2501 : return "OmFindOverlayDatabase called with stripped base, and no appropriate overlay was found";
      case 0x2502 : return "OmOverlayDBNameToLocale or OmLocaleToOverlayDBName were passed an unknown locale";
      case 0x2503 : return "OmOverlayDBNameToLocale was passed a poorly formed string";
      case 0x2504 : return "OmGetIndexedLocale was passed an invalid index";
      case 0x2505 : return "OmSetSystemLocale was passed an invalid locale (doesn't correspond to available system overlay)";
      case 0x2506 : return "OmSetSystemLocale was passed a locale that referenced an invalid system overlay (missing one or more required resources)";
      case 0x2507 : return "OmGetNextSystemLocale was called, but there were no more valid system locales to return";
      case 0x2801 : return "Message exceeds maximum size supported by network";
      case 0x2901 : return "Unsupported or undefined opcode and/or creator";
      case 0x2902 : return "The required power is not available";
      case 0x2903 : return "No card is present";
      case 0x2904 : return "Slot reference number is bad";
      case 0x2905 : return "Slot reference number is within valid range, but has been deallocated";
      case 0x2906 : return "The card does not support the SlotDriver block read/write API";
      case 0x2907 : return "The card does support R/W API but the card is read only";
      case 0x2908 : return "The card does support R/W API but the sector is bad";
      case 0x2909 : return "The card does support R/W API but the sector is protected";
      case 0x290A : return "Slot driver library has not been opened";
      case 0x290B : return "Slot driver library is still open - maybe it was opened > once";
      case 0x290C : return "Call is unimplemented";
      case 0x290D : return "No values remaining to enumerate";
      case 0x290E : return "The API version of this slot driver is not supported by this version of ExpansionMgr";
      case 0x2A01 : return "Passed in buffer is too small";
      case 0x2A02 : return "Generic file error";
      case 0x2A03 : return "The fileref is invalid (has been closed, or was not obtained from VFSFileOpen())";
      case 0x2A04 : return "Returned from FSFileDelete if the file is still open";
      case 0x2A05 : return "The file is read only";
      case 0x2A06 : return "A file of this name exists already in this location";
      case 0x2A07 : return "File pointer is at end of file";
      case 0x2A08 : return "File was not found at the path specified";
      case 0x2A09 : return "The volume refnum is invalid";
      case 0x2A0A : return "Returned from FSVolumeFormat if the volume is still mounted";
      case 0x2A0B : return "No installed filesystem supports this operation";
      case 0x2A0C : return "Operation could not be completed because of invalid data (i.e., import DB from .PRC file)";
      case 0x2A0D : return "Can't delete a non-empty directory";
      case 0x2A0E : return "Invalid filename, or path, or volume label or something...";
      case 0x2A0F : return "Not enough space left on volume";
      case 0x2A10 : return "This call is not implemented";
      case 0x2A11 : return "This operation requires a directory";
      case 0x2A12 : return "This operation requires a regular file, not a directory";
      case 0x2A13 : return "Returned from VFSFileCreate when the path leading up to the new file does not exist";
      case 0x2A14 : return "A volume name or filename was automatically shortened to conform to filesystem spec";
      case 0x2B01 : return "Unknown locale";
      case 0x2B02 : return "Locale index >= LmGetNumLocales()";
      case 0x2B03 : return "LmLocaleSettingChoice out of bounds";
      case 0x2B04 : return "Data for locale setting too big for destination";
      case 0x2C01 : return "Invalid selector";
      case 0x2E01 : return "Ran out of memory";
      case 0x2F01 : return "Couldn't allocate message";
      case 0x2F02 : return "Unknown Tel internal error";
      case 0x2F03 : return "Memory allocation error";
      case 0x2F04 : return "Time-out was reached";
      case 0x2F05 : return "User cancelled action";
      case 0x2F06 : return "Resource is busy";
      case 0x2F07 : return "Don't know that application";
      case 0x2F08 : return "Applications table is full";
      case 0x2F09 : return "Access to ME has not been granted";
      case 0x2F0A : return "Buffer used to retrieve data is too small";
      case 0x2F0B : return "The feature is not supported by phone/network";
      case 0x2F0C : return "The communication link with the phone is down";
      case 0x2F0D : return "The phone reply syntax is incorrect, check the phone driver!";
      case 0x2F0E : return "The phone couldn't achieve the associated command, check the phone driver!";
      case 0x2F0F : return "Spc call failure events, error field values";
      case 0x2F10 : return "Phone code required";
      case 0x2F11 : return "No SIM inserted";
      case 0x2F12 : return "PIN is required";
      case 0x2F13 : return "PUK is required";
      case 0x2F14 : return "The SIM is not working properly";
      case 0x2F15 : return "The SIM couldn't reply";
      case 0x2F16 : return "The SIM is not accepted by the phone";
      case 0x2F17 : return "Incorrect password";
      case 0x2F18 : return "PIN2 is required";
      case 0x2F19 : return "PUK2 is required";
      case 0x2F1A : return "Phone memory is full";
      case 0x2F1B : return "Invalid index when accessing a storage";
      case 0x2F1C : return "Entry not found";
      case 0x2F1D : return "The phone encountered a memory error";
      case 0x2F1E : return "Bad character in text string";
      case 0x2F1F : return "Bad character in dial string";
      case 0x2F20 : return "No network available";
      case 0x2F21 : return "The network didn't reply within 'normal' time delay";
      case 0x2F22 : return "Bad parameter passed to an API";
      case 0x2F23 : return "The specified short message validity period is invalid";
      case 0x2F24 : return "The specified short message coding scheme is invalid";
      case 0x2F25 : return "The specified short message smsc or destination phone number is invalid";
      case 0x2F26 : return "Information couldn't be retrieved, a copy of last retrieved value was returned";
      case 0x2F27 : return "The Telephony Task is not running";
      case 0x2F28 : return "Phone 2 SIM PIN is required";
      case 0x2F29 : return "The specified driver was not found";
      case 0x2F2A : return "The generic driver was not found";
      case 0x2F2B : return "No specific driver was specified";
      case 0x2F2C : return "The call has been released";
      case 0x2F2D : return "The call has encountered an error";
      case 0x2F2E : return "The shared lib couldn't be installed";
      case 0x2F2F : return "The shared lib version doesn't match the application one";
      case 0x2F30 : return "Bad telephony settings: Phone Panel Prefs doesn't exist or Telephony Profile not (correctly) set";
      case 0x2F31 : return "The asked value can't be retrieved at that time (i.e.: TelSpcGetCallerNumber and no active line)";
      case 0x2F32 : return "The current driver is partially compatible with the connected phone";
      case 0x2F33 : return "The currently used profile conflicts with the requested profile";
      case 0x2F34 : return "The shared lib is currently being used by another app, don't unload it!";
      case 0x2F35 : return "Couldn't find the specified (by phone driver) telephony task";
      case 0x3001 : return "Hardware custom not implemented";
      case 0x3002 : return "Creator not supported";
      case 0x3003 : return "Selector not supported";
      case 0x3004 : return "Parameter too small";
      case 0x3101 : return "The library is not open";
      case 0x3102 : return "The the user has bluetooth turned off in the prefs panel";
      case 0x3103 : return "The preference are missing";
      case 0x3104 : return "The lib is alreasy open, not an error";
      case 0x3105 : return "Library mem alloc failed";
      case 0x3106 : return "Remote operation completed but failed";
      case 0x3107 : return "An operation is already in progress";
      case 0x3108 : return "A bad param is passed in";
      case 0x3109 : return "The library has reached it capacity for this type of registery";
      case 0x310A : return "The operation will return results through a callback";
      case 0x310B : return "Operation not in progress";
      case 0x310C : return "HCI failed to initialize which implies that the Bluetooth radio is having problems or may not exist";
      case 0x310D : return "A fatal error has occurred with the HCI";
      case 0x310E : return "Not an Error, Indicates that the HCI initialization is successful. The ME will now accept commands again";
      case 0x310F : return "Radio was reset because the device went to sleep. The radio will be reinitialized. Same conditions apply to this error code as a btLibErrRadioFatal";
      case 0x3110 : return "No connection on socket";
      case 0x3111 : return "The callbcakis already registered";
      case 0x3112 : return "No Acl link to remote device";
      case 0x3113 : return "Operation not valid on remote SDP record";
      case 0x3114 : return "Operation not valid on advertised SDP record";
      case 0x3115 : return "Sdp Record improperly formatted";
      case 0x3116 : return "Operation not valid on non advertised record";
      case 0x3117 : return "Invalid/unsupported SDP version";
      case 0x3118 : return "Invalid service record handle";
      case 0x3119 : return "Invalid request syntax";
      case 0x311A : return "Invalid PDU size";
      case 0x311B : return "Invalid Continuation data";
      case 0x311C : return "Insufficient resources to satisfy request";
      case 0x311D : return "SDP disconnected";
      case 0x311E : return "SDP response from had invalid data";
      case 0x311F : return "Attribute is not set for record";
      case 0x3120 : return "Operation Invalid on mapped record or socket";
      case 0x3121 : return "The socket reference is invalid";
      case 0x3122 : return "The socket is the wrong protocol for the operation";
      case 0x3123 : return "The socket has the wrong role (listener/connection) for the operation";
      case 0x3124 : return "The PSM was is already in use";
      case 0x3125 : return "The Channel was unavailable on the remtoe device";
      case 0x3126 : return "User disconnected";
      case 0x3127 : return "The operation was canceled";
      case 0x3128 : return "The resource in question is busy";
      case 0x3129 : return "Unknown HCI Command";
      case 0x312A : return "No connection";
      case 0x312B : return "Hardware Failure";
      case 0x312C : return "Page timeout";
      case 0x312D : return "Authentication failure";
      case 0x312E : return "Missing key";
      case 0x312F : return "Memory full";
      case 0x3130 : return "Connection timeout";
      case 0x3131 : return "Max number of connections";
      case 0x3132 : return "Max number of SCO connections to a device";
      case 0x3133 : return "Max number of ACL connections to a device";
      case 0x3134 : return "Command disallowed";
      case 0x3135 : return "Host rejected due to limited resources";
      case 0x3136 : return "Host rejected due to security reasons";
      case 0x3137 : return "Host rejected (remote is personal device)";
      case 0x3138 : return "Host timeout";
      case 0x3139 : return "Unsupported feature or parameter value";
      case 0x313A : return "Invalid HCI command parameters";
      case 0x313B : return "Other end terminated (user)";
      case 0x313C : return "Other end terminated (low resources)";
      case 0x313D : return "Other end terminated (about to power off)";
      case 0x313E : return "Terminated by local host";
      case 0x313F : return "Repeated attempts";
      case 0x3140 : return "Pairing not allowed";
      case 0x3141 : return "Unknown LMP PDU";
      case 0x3142 : return "Unsupported Remote Feature";
      case 0x3143 : return "SCO Offset Rejected";
      case 0x3144 : return "SCO Interval Rejected";
      case 0x3145 : return "SCO Air Mode Rejected";
      case 0x3146 : return "Invalid LMP Parameters";
      case 0x3147 : return "Unspecified Error";
      case 0x3148 : return "Unsupported LMP Parameter Value";
      case 0x3149 : return "Role change is not allowed";
      case 0x314A : return "Response timeout";
      case 0x314B : return "Transd collision";
      case 0x314C : return "Pdu not allowed";
      case 0x314D : return "Disconnection occurred for an unknown reason";
      case 0x314E : return "Disconnection was requested by either the local or remote device";
      case 0x314F : return "An L2CAP request timed out";
      case 0x3150 : return "The underlying ACL Link was disconnected";
      case 0x3151 : return "The connection was terminated due to a QOS violation";
      case 0x3152 : return "The local security manager refused the connection attempt";
      case 0x3153 : return "The remote device does not support the requested protocol service (PSM)";
      case 0x3154 : return "The remote device's security architecture denied the connection";
      case 0x3155 : return "The remote device is out of resources";
      case 0x3156 : return "Configuration failed due to unacceptable parameters";
      case 0x3157 : return "Configuration was rejected (unknown reason)";
      case 0x3158 : return "Configuration failed due to an unrecognized configuration option";
      case 0x3159 : return "The app opened the stack, overriding the service";
      case 0x315A : return "The power was cycled, causing the ACL connection to drop";
      case 0x315B : return "The ACL connection was dropped";
      case 0x315C : return "The ACL connection was dropped";
      case 0x315D : return "The ACL connection was dropped";
      case 0x315E : return "The stack can not be opened by an app because it is in use by a service";
      case 0x315F : return "A piconet is required for this operation";
      case 0x3160 : return "Could not perform M/S switch";
      case 0x3161 : return "Operation not valid on unmapped socket or record";
      case 0x3162 : return "Connection already in place";
      case 0x3163 : return "The BtStack was not opened with the library";
      case 0x3164 : return "The Battery is to low to perform the operation";
      case 0x3165 : return "The requested value was not found";
      case 0x31EF : return "Dgb only, unsupported feature remove";
      case 0x31FF : return "Operation could not complete, unknown error";
      case 0x3801 : return "CPM Library is already open. Usually returned from a CPMLibOpen indicating that the library is already open";
      case 0x3802 : return "CPM Library not open. Usually returned from a CPM Library call indciating that the CPM library is not yet open";
      case 0x3803 : return "CPM Library is still open after a CPMLibClose call";
      case 0x3804 : return "CPM Library is not aware of any providers. With no providers the CPM Library has no functionality";
      case 0x3805 : return "CPM Library cannot load the Base provider";
      case 0x3806 : return "CPM Library cannot find the specified provider";
      case 0x380A : return "A CPM library call was made with an invalid parameter";
      case 0x380B : return "The CPM Library is out of resources (memory, static heap, etc)";
      case 0x380C : return "The CPM Library is out of dynamic heap";
      case 0x380D : return "A buffer passed into the CPM Library was too small";
      case 0x380E : return "Data passed into the CPM Library was no good";
      case 0x380F : return "A CPM Library function is not implemented";
      case 0x3810 : return "A CPM Library function is unsupported in the current version";
      case 0x3811 : return "The CPM globals could not be found for this operation";
      case 0x3812 : return "The key you are trying to import already seems to exist";
      case 0x3813 : return "The key you are trying to export doesnt seem to exist";
      case 0x5000 : return "No soft input area";
      case 0x5001 : return "Invalid parameter";
      case 0x5101 : return "Invalid location";
      case 0x5102 : return "Invalid name";
      case 0x5103 : return "Input window is open";
   }
   return null;
}

CharP privateGetErrorMessage(int32 errorCode, CharP buffer, uint32 size)
{
   CharP msg = getMessageFromCode(errorCode);
   if (msg != null)
   {
      xstrncpy(buffer, msg, min32(size,xstrlen(msg)));
      return buffer;
   }
   return null;
}
