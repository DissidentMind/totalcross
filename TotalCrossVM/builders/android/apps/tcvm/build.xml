<?xml version="1.0" encoding="UTF-8"?>
<project name="TotalCross" >

	<property name="android.project.path" value="${basedir}"/>
	<property name="android.deploy" value="${basedir}/deploy"/>
	<property name="source.vms.path" value="${basedir}/../../../.."/>
	<property name="source.sdk.path" value="${basedir}/../../../../../TotalCrossSDK"/>

<!-- The local.properties file is created and updated by the 'android'
     tool.
     It contains the path to the SDK. It should *NOT* be checked into
     Version Control Systems. -->
    <property file="local.properties" />

    <!-- The build.properties file can be created by you and is never touched
         by the 'android' tool. This is the place to change some of the
         default property values used by the Ant rules.
         Here are some properties you may want to change/update:

         source.dir
             The name of the source directory. Default is 'src'.
         out.dir
             The name of the output directory. Default is 'bin'.

         Properties related to the SDK location or the project target should
         be updated using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems.

         -->
    <property file="build.properties" />

    <!-- The default.properties file is created and updated by the 'android'
         tool, as well as ADT.
         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems. -->
    <property file="${source.vms.path}/src/jni/default.properties" />

    <!-- Custom Android task to deal with the project target, and import the
         proper rules.
         This requires ant 1.6.0 or above. -->
    <path id="android.antlibs">
        <pathelement path="${sdk.dir}/tools/lib/anttasks.jar" />
        <pathelement path="${sdk.dir}/tools/lib/sdklib.jar" />
        <pathelement path="${sdk.dir}/tools/lib/androidprefs.jar" />
    </path>

    <taskdef name="setup"
        classname="com.android.ant.SetupTask"
        classpathref="android.antlibs" />

	<loadfile srcfile="${source.sdk.path}/src/totalcross/sys/Settings.java" property="tc.version">
		<filterchain>
			<linecontains>
				<contains value="versionStr"/>
			</linecontains>
			<striplinebreaks/>
			<tokenfilter>
				<replacestring from="public" to=""/>
				<replacestring from="static" to=""/>
				<replacestring from="final" to=""/>
				<replacestring from="String" to=""/>
				<replacestring from="versionStr" to=""/>
				<replacestring from="=" to=""/>
				<deletecharacters chars='";'/>
				<trim/>
			</tokenfilter>
		</filterchain>
	</loadfile>
	<echo message="TotalCross version : '${tc.version}'"/>	
	
    <target name="-pre-build">
        <copy toDir="${android.deploy}/src" overwrite="true">
           <fileset dir="${source.sdk.path}/src" includes="totalcross/Launcher4A.java,totalcross/MainClass.java,totalcross/TCEventThread.java,totalcross/android/" excludes="ras/,tc/" />
           <fileset dir="${source.vms.path}/src/launchers/android/src" includes="totalcross/AndroidUtils.java" />
        </copy>    	
    </target>	
	
    <target name="-pre-compile">
      
      <property name="extensible.classpath" location="${android.project.path}\maps.jar" />
     
	  <!-- prepare the AndroidManifest.xml --> 
	  <tstamp>
	    <format property="code.version" pattern="yyMMddkkmm"/>
	  </tstamp>
	  <echo message="New package: ${code.version}" />
	                        
	  <copy file="${android.project.path}/AndroidManifest.xml" toDir="${android.deploy}">
	    <filterset recurse="false" begintoken='!' endtoken='!' >
	      <filter token="1.0" value="${tc.version}"/>
	    </filterset>
	    <filterset recurse="false" begintoken='"-' endtoken='"' >
	      <filter token="1" value='"${code.version}"'/>
	    </filterset>
	  </copy>   	
    	
	    <!-- update the tcfiles.zip with the tczs that will be installed -->
	    <mkdir dir="${android.deploy}/assets" />
	    <zip destfile="${android.deploy}/assets/tcfiles.zip" filesonly="true" compress="no">
	      <zipfileset dir="${source.sdk.path}/dist/vm"      includes="TCBase.tcz" />
	      <zipfileset dir="${source.sdk.path}/etc/fonts" includes="TCFont.tcz,TCFontOld.tcz" />
	    </zip>    	
    </target>
	
    <target name="-package-resources">
        <echo>************ Packaging resources single-apk ************</echo>
        <aapt executable="${aapt}"
                command="package"
                versioncode="${version.code}"
                debug="${build.packaging.debug}"
                manifest="../singleapk/AndroidManifest.xml"
                assets="deploy/assets"
                androidjar="${android.jar}"
                apkfolder="${out.absolute.dir}"
                resourcefilename="${resource.package.file.name}"
                resourcefilter="${aapt.resource.filter}">
            <res path="${resource.absolute.dir}" />
            <!-- <nocompress /> forces no compression on any files in assets or res/raw -->
            <!-- <nocompress extension="xml" /> forces no compression on specific file extensions in assets and res/raw -->
        </aapt>
        <move file="${out.absolute.dir}/TotalCross.ap_" tofile="${out.absolute.dir}/single.apk" />
        
        <echo>************ Packaging resources ************</echo>
        <aapt executable="${aapt}"
                command="package"
                versioncode="${version.code}"
                debug="${build.packaging.debug}"
                manifest="deploy/AndroidManifest.xml"
                assets="deploy/assets"
                androidjar="${android.jar}"
                apkfolder="${out.absolute.dir}"
                resourcefilename="${resource.package.file.name}"
                resourcefilter="${aapt.resource.filter}">
            <res path="${resource.absolute.dir}" />
            <!-- <nocompress /> forces no compression on any files in assets or res/raw -->
            <!-- <nocompress extension="xml" /> forces no compression on specific file extensions in assets and res/raw -->
        </aapt>
        
        <!-- finishing single-apk. must be here, otherwise the second resource packaging fails -->
        <unzip src="${out.absolute.dir}/single.apk" dest="${out.absolute.dir}">
           <patternset>
             <include name="AndroidManifest.xml"/>
             <include name="resources.arsc"/>
           </patternset>
        </unzip>
        <move file="${out.absolute.dir}/AndroidManifest.xml" tofile="${out.absolute.dir}/AndroidManifest_singleapk.xml" />
        <move file="${out.absolute.dir}/resources.arsc" tofile="${out.absolute.dir}/resources_singleapk.arsc" />
        <delete file="${out.absolute.dir}/single.apk" />
    </target>	

<!-- extension targets. Uncomment the ones where you want to do custom work
     in between standard targets -->
<!--
    <target name="-pre-build">
    </target>
    <target name="-pre-compile">
    </target>

    [This is typically used for code obfuscation.
     Compiled code location: ${out.classes.absolute.dir}
     If this is not done in place, override ${out.dex.input.absolute.dir}]
    <target name="-post-compile">
    </target>
-->


    <!-- Execute the Android Setup task that will setup some properties
         specific to the target, and import the build rules files.

         The rules file is imported from
            <SDK>/platforms/<target_platform>/ant/ant_rules_r#.xml

         To customize existing targets, there are two options:
         - Customize only one target:
             - copy/paste the target into this file, *before* the
               <setup> task.
             - customize it to your needs.
         - Customize the whole script.
             - copy/paste the content of the rules files (minus the top node)
               into this file, *after* the <setup> task
             - disable the import of the rules by changing the setup task
               below to <setup import="false" />.
             - customize to your needs.
    -->
    <setup />

</project>
